{"version":3,"sources":["custom.scss","neat/grid/_box-sizing.scss","core/_global.scss","bourbon/functions/_shade.scss","bourbon/functions/_px-to-rem.scss","bourbon/css3/_selection.scss","bourbon/functions/_tint.scss","core/_variables.scss","core/_mixins.scss","neat/grid/_row.scss","bourbon/addons/_clearfix.scss","sect/_hero.scss","sect/_about.scss","neat/grid/_span-columns.scss","neat/grid/_private.scss","neat/grid/_omega.scss","sect/_portfolio.scss","neat/grid/_outer-container.scss","bourbon/addons/_prefixer.scss","sect/_resume.scss","sect/_contact.scss","sect/_post.scss"],"names":[],"mappings":"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","file":"custom.css","sourcesContent":["@import 'bourbon/bourbon';\n@import 'neat/neat';\n\n@import url(https://fonts.googleapis.com/css?family=Cardo:400,400italic,700);\n@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,200,200italic,300,300italic,400italic,600,600italic,700italic,700,900,900italic);\n// @import url(https://fonts.googleapis.com/css?family=Roboto:400,100,100italic,300,300italic,400italic,500,500italic,700,700italic,900,900italic);\n\n@import 'core/variables';\n@import 'core/mixins';\n@import 'core/global';\n\n@import 'sect/hero';\n@import 'sect/about';\n@import 'sect/portfolio';\n@import 'sect/resume';\n@import 'sect/contact';\n@import 'sect/post';\n\n// Temporary: Remove once done\nheader.notice {\n\t// @include filter(hue-rotate(90deg));\n\tbackground-color: $accent-color;\n\tmargin: 0;\n\tborder: 0;\n\tpadding: rem(15);\n\tdisplay: block;\n\tposition: relative;\n\tspan {\n\t\tcolor: $white100;\n\t\t// color: $black200;\n\t\tfont-weight: 400;\n\t\tletter-spacing: 0.2px;\n\t\tfont-size: rem(16);\n\n\t\ta {\n\t\t\tcolor: $white300;\n\t\t\t// color: $black300;\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","body {\n\tbackground: $white150;\n\tfont-size: rem(14);\n\t// font-weight: 300;\n\n\t@media (min-width: $mob-min-width){\n\t\tfont-size: rem(15);\n\t}\n\t@media (min-width: $tab-min-width){\n\t\tfont-size: rem(16);\n\t}\n}\n\n@include selection {\n\tbackground-color: tint($black200, 15%);\n\tcolor: $white100;\n}\n\na {\n\t@include selection {\n\t\tbackground-color: shade($accent-color, 5%);\n\t\tcolor: $white100;\n\t}\n\tcolor: shade($accent-color, 10%);\n\n\t&:hover,\n\t&:active {\n\t\tcolor: shade($accent-color, 15%);\n\t}\n\n\t&:visited {\n\tcolor: shade($accent-color, 10%);\n\t\t// color: shade($accent-color, 45%);\n\t}\n}\n\np,\nli,\nspan {\n\tcolor: $black400;\n\tline-height: 1.8;\n}\n\nh1,\nh2 {\n\tfont-family: $cardo;\n}\n\nnav {\n\t&.site-nav {\n\t\t&:not(:hover):not(:active):not(:focus) {\n\t\t\tbackground: transparent;\n\t\t}\n\n\t\t.menu-icon {\n\t\t\theight: 36px;\n\t\t}\n\n\t\t.page-link {\n\t\t\t// color: $white200;\n\t\t\tcolor: $black200;\n\t\t\t// font-weight: 300;\n\n\t\t\t@media ($mob-min-width){\n\t\t\t\tfont-size: rem(15);\n\t\t\t}\n\n\t\t&:hover,\n\t\t&:active {\n\t\t\t// color: $black200;\n\t\t\tcolor: $black300;\n\t\t\t@media (min-width: $mob-min-width){\n\t\t\t\tcolor: $white100;\n\t\t\t\tcolor: $black300;\n\t\t\t}\n\t\t}\n\t\t}\n\n\t}\n}\n\n.site-header {\n\t@include sect-side-padding;\n\tbackground: transparent;\n\tborder-bottom-width: 0;\n\tmargin-bottom: rem(-56);\n\tz-index: 10;\n\t// border-top-color: shade($accent-color, 30%);\n\tborder-top-width: 0;\n}\n\n.fullwidth {\n\tmax-width: 100%;\n\t// padding: 0;\n}\n\n.wrapper.fullwidth {\n\tpadding: 0;\n\n\t> section {\n\t\t&:not(.hero){\n\t\t\t@include sect-padding;\n\t\t\t@include clip-path-both;\n\t\t}\n\n\t\t&.hero {\n\t\t\t@include sect-side-padding;\n\t\t\t@include clip-path-down;\n\t\t\tpadding-bottom: rem(30); // clip-path version\n\n\t\t\t@media (min-width: $mob-min-width){\n\t\t\t\tpadding-bottom: rem(50); // clip-path version\n\t\t\t}\n\t\t}\n\t}\n\n\tarticle {\n\t\t@include sect-padding;\n\t\tbackground: $white100;\n\t}\n}\n\n.site-footer {\n\t@include clip-path-up;\n\tposition: relative;\n\tbackground: $white200;\n\n\t.wrapper.fullwidth .row{\n\t\t@include sect-side-padding;\n\t\tpadding-top: rem(80); // clip-path version\n\n\t\t@media (min-width: $mob-min-width){\n\t\t\tpadding-top: rem(100); // clip-path version\n\t\t}\n\n\t\t@media (min-width: $desk-min-width){\n\t\t\tpadding: 0;\n\t\t\tpadding-top: rem(100); // clip-path version\n\t\t}\n\n\t\t.footer-col {\n\t\t\tpadding-left: 0;\n\t\t\tpadding-right: 15px;\n\t\t}\n\t\t// @include sect-padding;\n\t}\n\n\t.footer-col-wrapper {\n\t\tmargin-left: 0;\n\n\t\t// @media (min-width: $mob-min-width){\n\t\t// \tmargin-left: rem(-15);\n\t\t// }\n\t\t// @media (min-width: $tab-min-width){\n\t\t// \tmargin-left: rem(0);\n\t\t// }\n\t\t@media (min-width: $desk-min-width){\n\t\t\tpadding-left: rem(30);\n\t\t}\n\t\t@media (min-width: $hires-min-width){\n\t\t\tpadding-left: 0;\n\t\t}\n\t}\n}\n\n.page-heading,\nsection header h2 {\n\tfont-size: rem(26);\n\tfont-weight: 300;\n\tcolor: $base-color300;\n\t@media (min-width: $mob-min-width){\n\t\tfont-size: rem(28);\n\t}\n\t@media (min-width: $tab-min-width){\n\t\tfont-size: rem(30);\n\t}\n}\n\n.row {\n\t@include row();\n\tmax-width: rem(1280);\n\tmargin: 0 auto;\n}\n\n.right { float: right;}\n\n.clearfix { clear: both;}\n\n.text-center {\n\ttext-align: center;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n.inline-lists {\n\t@include inline-lists;\n}\n\n.page-content {\n\tposition: relative;\n\tpadding: 0;\n\tz-index: 9;\n}\n\nhr,\nspan {\n\t&.short {\n\t\tmargin: rem(30) 0;\n\t\twidth: rem(100);\n\t\tborder-width: rem(3) 0 0 0;\n\t\tborder-style: solid;\n\t}\n\n\t&.red {\n\t\tborder-color: $accent-color;\n\t}\n\n\t&.center {\n\t\tmargin: 0 auto;\n\t\tmargin-top: rem(30);\n\t\tmargin-bottom: rem(30);\n\t}\n\n\t&.header {\n\t\tmargin-top: rem(30/2);\n\t}\n}\n\na.read-more {\n\tcolor: $black200;\n\n\t&:visited {\n\t\tcolor: $black400;\n\t}\n}\n\n\nheader.page-inner {\n\t@include hero-colors;\n\t@include sect-side-padding;\n\t@include clip-path-down;\n\tpadding-bottom: rem(30);\n\n\t@media (min-width: $mob-min-width){\n\t\tpadding-bottom: rem(50); // clip-path version\n\t}\n\t// margin-bottom: rem(30);\n\n\t.header-wrapper {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tmax-width: rem(1280);\n\t\tmargin: 0 auto;\n\t}\n\n\t.row {\n\t\theight: rem(300);\n\t\tdisplay: flex;\n\t\talign-items: flex-end;\n\t\tjustify-content: flex-start;\n\n\t\t.content {\n\t\t\tmargin: rem(50) 0;\n\t\t}\n\n\t\t.page-heading {\n\t\t\tfont-size: rem(44);\n\t\t\t@include title-styling;\n\t\t}\n\n\t\t.description {\n\t\t\t@include subtitle-styling;\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","$cardo: \"Cardo\", Georgia, Times, serif;\n$sourcesans: \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n// $sourcesans: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\n$black100: tint(black, 3%);\n$black200: tint($black100, 15%);\n$black300: tint($black200, 15%);\n$black400: tint($black300, 15%);\n$black500: #828282;\n\n$white100: white;\n$white150: shade($white100, 4%);\n$white200: shade($white100, 8%);\n$white300: shade($white200, 8%);\n$white400: shade($white300, 8%);\n\n// $base-color: #344245;\n// $base-color: #002F91;\n$base-color: $black200;\n$base-color200: shade($base-color, 25%);\n// $base-color300: saturate(tint($base-color, 10%), 15%);\n$base-color300: tint($base-color200, 10%);\n\n// $accent-color: saturate(tint(#6F5653, 25%), 40%);\n// $accent-color: $black400;\n$accent-color: tint(#002F91, 40%);\n// $accent-color: #eca70c;\n\n$mob-min-width: 640px;\n$tab-min-width: 768px;\n$lap-min-width: 1024px;\n$desk-min-width: 1200px;\n$hires-min-width: 1440px;\n\n$shadow1: 0 1px 3px rgba($black100,0.12), 0 1px 2px rgba($black100,0.24);\n$shadow2: 0 10px 20px rgba($black100,0.19), 0 6px 6px rgba($black100,0.23);\n$shadow3: 0 10px 20px rgba($black100,0.19), 0 6px 6px rgba($black100,0.23);\n$shadow4: 0 14px 28px rgba($black100,0.25), 0 10px 10px rgba($black100,0.22);\n$shadow5: 0 19px 38px rgba($black100,0.30), 0 15px 12px rgba($black100,0.22);\n","@mixin hero-colors {\n\tbackground-color: $base-color;\n\tbackground-color: tint($white200, 60%);\n\tbackground-color: $white200;\n\t// border-bottom: solid 1px $white400;\n\t// @include background-image(linear-gradient(135deg, $base-color200 0%, $base-color 100%));\n\n\t// * {color: $white200};\n\t* {color: $black200};\n}\n\n@mixin sect-padding {\n\tpadding: rem(70) rem(15);\n\tpadding: rem(120) rem(15); // clip-path version\n\n\t@media (min-width: $mob-min-width){\n\t\tpadding: rem(100) rem(30);\n\t\tpadding: rem(150) rem(30); // clip-path version\n\t}\n}\n\n@mixin sect-side-padding {\n\tpadding: 0 rem(15);\n\n\t@media (min-width: $mob-min-width){\n\t\tpadding: 0 rem(30);\n\t}\n}\n\n@mixin content-bg {\n\tpadding: rem(10) rem(15);\n\tpadding-left: 0;\n}\n\n@mixin title-styling {\n\tline-height: 1;\n\tfont-weight: 300;\n\t// color: tint($accent-color, 25%);\n\tcolor: $black300;\n\tmargin: 0;\n}\n\n@mixin subtitle-styling {\n\tfont-size: rem(18);\n\tfont-family: $sourcesans;\n\tfont-weight: 300;\n\t// color: shade($white400, 15%);\n\tcolor: $black200;\n\tletter-spacing: 0.3px;\n\t@media (min-width: $mob-min-width){\n\t\tfont-size: rem(20);\n\t}\n\t@media (min-width: $tab-min-width){\n\t\tfont-size: rem(22);\n\t}\n}\n\n@mixin inline-block-container {\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: 100%;\n}\n\n@mixin block-tags {\n\tmargin: rem(3) rem(6) rem(3) 0;\n\tpadding: rem(8) rem(12);\n\tborder: solid 1px black;\n\tdisplay: block;\n}\n\n@mixin inline-lists {\n\tlist-style: none;\n\tmargin: 0;\n\tfloat: left;\n\n\tli {\n\t\tdisplay: inline-block;\n\t\tfloat: left;\n\t}\n}\n\n@mixin clip-path-both {\n-webkit-clip-path: polygon(0 20px, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tclip-path: polygon(0 20px, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tmargin-top: -20px;\n\tmargin-bottom: -20px;\n\n\t@media (min-width: $tab-min-width){\n-webkit-clip-path: polygon(0 30px, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\tclip-path: polygon(0 30px, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\tmargin-top: -30px;\n\tmargin-bottom: -30px;\n\t}\n\n\t@media (min-width: $desk-min-width){\n-webkit-clip-path: polygon(0 40px, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\tclip-path: polygon(0 40px, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\tmargin-top: -40px;\n\tmargin-bottom: -40px;\n\t}\n\t\n\t@media (min-width: $hires-min-width){\n\t-webkit-clip-path: polygon(0 60px, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\tclip-path: polygon(0 60px, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\tmargin-top: -60px;\n\tmargin-bottom: -60px;\n\t}\n}\n\n@mixin clip-path-up {\n-webkit-clip-path: polygon(0 20px, 100% 0, 100% 100%, 0% 100%);\n\tclip-path: polygon(0 20px, 100% 0, 100% 100%, 0% 100%);\n\tmargin-top: -20px;\n\n\t@media (min-width: $tab-min-width){\n-webkit-clip-path: polygon(0 30px, 100% 0, 100% 100%, 0% 100%);\n\tclip-path: polygon(0 30px, 100% 0, 100% 100%, 0% 100%);\n\tmargin-top: -30px;\n\t}\n\n\t@media (min-width: $desk-min-width){\n-webkit-clip-path: polygon(0 40px, 100% 0, 100% 100%, 0% 100%);\n\tclip-path: polygon(0 40px, 100% 0, 100% 100%, 0% 100%);\n\t}\n\t\n\t@media (min-width: $hires-min-width){\n\t-webkit-clip-path: polygon(0 60px, 100% 0, 100% 100%, 0% 100%);\n\tclip-path: polygon(0 60px, 100% 0, 100% 100%, 0% 100%);\n\t}\n}\n\n@mixin clip-path-down {\n-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tmargin-bottom: -20px;\n\n\t@media (min-width: $tab-min-width){\n-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\tmargin-bottom: -30px;\n\t}\n\n\t@media (min-width: $desk-min-width){\n-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\tmargin-bottom: -40px;\n\t}\n\t\n\t@media (min-width: $hires-min-width){\n\t-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\tmargin-bottom: -60px;\n\t}\n}","@charset \"UTF-8\";\n\n/// Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.\n///\n/// @param {String} $display [default]\n///  Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.\n///\n/// @param {String} $direction [$default-layout-direction]\n///  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\n///\n/// @example scss - Usage\n///  .element {\n///    @include row();\n///  }\n///\n/// @example css - CSS Output\n///  .element {\n///    *zoom: 1;\n///    display: block;\n///  }\n///\n/// .element:before, .element:after {\n///   content: \" \";\n///   display: table;\n/// }\n///\n/// .element:after {\n///   clear: both;\n/// }\n\n@mixin row($display: default, $direction: $default-layout-direction) {\n  @if $direction != $default-layout-direction {\n    @include -neat-warn(\"The $direction argument will be deprecated in future versions in favor of the direction(){...} mixin.\");\n  }\n\n  $layout-direction: $direction !global;\n\n  @if $display != default {\n    @include -neat-warn(\"The $display argument will be deprecated in future versions in favor of the display(){...} mixin.\");\n  }\n\n  @if $display == table {\n    display: table;\n    @include fill-parent;\n    table-layout: fixed;\n    $container-display-table: true !global;\n  } @else {\n    @include clearfix;\n    display: block;\n    $container-display-table: false !global;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n",".hero {\n\t@include hero-colors;\n\tpadding-top: 0;\n\tpadding-bottom: 0;\n\n\t.hero-wrapper {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tmax-width: rem(1280);\n\t\tmargin: 0 auto;\n\t}\n\n\t.row {\n\t\theight: rem(300);\n\t\t@media (min-width: $mob-min-width){\n\t\t\theight: rem(350);\n\t\t}\n\t\t@media (min-width: $tab-min-width){\n\t\t\theight: rem(400);\n\t\t}\n\t\t@media (min-width: $lap-min-width){\n\t\t\theight: rem(450);\n\t\t}\n\t\t@media (min-width: $hires-min-width){\n\t\t\theight: rem(500);\n\t\t}\n\t\tdisplay: flex;\n\t\talign-items: flex-end;\n\t\tjustify-content: flex-start;\n\t}\n\n\t.content {\n\t\tmargin: rem(50) 0;\n\t}\n\n\t.title {\n\t\t@include title-styling;\n\t\tfont-size: rem(42);\n\t\t@media (min-width: $mob-min-width){\n\t\tfont-size: rem(48);\n\t\t}\n\t\t@media (min-width: $tab-min-width){\n\t\tfont-size: rem(55);\n\t\t}\n\t}\n\n\t.subtitle {\n\t\t@include subtitle-styling;\n\n\t\ta {\n\t\t\tcolor: $white100;\n\t\t\tcolor: $black300;\n\t\t\tfont-weight: 400;\n\t\t}\n\t}\n}",".about {\n\t.content {\n\t\t@include span-columns(12);\n\t\tmargin-top: rem(15);\n\n\t\t@media (min-width: $tab-min-width){\n\t\t\t@include span-columns(8);\n\t\t\tmargin-top: rem(0);\n\t\t}\n\n\t.description { max-width: rem(700);}\n\n\t}\n\n\t.image-wrapper {\n\t\t@media (min-width: $tab-min-width){\n\t\t\t@include span-columns(4);\n\t\t\t@include omega();\n\t\t\tfloat: right;\n\t\t}\n\n\t\t.avater {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t.skills {\n\t\t@extend .inline-lists;\n\n\t\tli span {\n\t\t\t@include block-tags;\n\t\t}\n\t}\n}\n\n.About {\n\tbackground-color: $white150;\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n","@charset \"UTF-8\";\n\n/// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\n///\n/// @param {List} $query [block]\n///   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\n///\n///   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.\n///\n///   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.\n///\n/// @example scss - Usage\n///   .element {\n///     @include omega;\n///   }\n///\n///   .nth-element {\n///     @include omega(4n);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n) {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n+1) {\n///     clear: left;\n///   }\n\n@mixin omega($query: block, $direction: default) {\n  $table: belongs-to(table, $query);\n  $auto: belongs-to(auto, $query);\n\n  @if $direction != default {\n    @include -neat-warn(\"The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.\");\n  } @else {\n    $direction: get-direction($layout-direction, $default-layout-direction);\n  }\n\n  @if $table {\n    @include -neat-warn(\"The omega mixin no longer removes padding in table layouts.\");\n  }\n\n  @if length($query) == 1 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n\n    @else if contains-display-value($query) and $table == false {\n      margin-#{$direction}: 0;\n    }\n\n    @else {\n      @include nth-child($query, $direction);\n    }\n  } @else if length($query) == 2 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    } @else {\n      @include nth-child(nth($query, 1), $direction);\n    }\n  } @else {\n    @include -neat-warn(\"Too many arguments passed to the omega() mixin.\");\n  }\n}\n\n@mixin nth-child($query, $direction) {\n  $opposite-direction: get-opposite-direction($direction);\n\n  &:nth-child(#{$query}) {\n    margin-#{$direction}: 0;\n  }\n\n  @if type-of($query) == number and unit($query) == \"n\" {\n    &:nth-child(#{$query}+1) {\n      clear: $opposite-direction;\n    }\n  }\n}\n",".recent-work {\n\tbackground: $white100;\n}\n\n.portfolio {\n\tbackground-color: $white150;\n}\n\n.recent-work,\n.portfolio .list {\n\n\tul { @include outer-container(100%);}\n\n\tli:not([class$=\"desandro\"]) {\n\t// li {\n\t\t@include span-columns(12);\n\t\t// box-shadow: $shadow1;\n\n\t\t@media (min-width: $mob-min-width) and (max-width: $tab-min-width) {\n\t\t\t@include span-columns(6);\n\n\t\t\t&:nth-child(2n+2){\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t\t@media (min-width: $tab-min-width) and (max-width: $desk-min-width) {\n\t\t\t@include span-columns(6);\n\n\t\t\t&:nth-child(2n+2){\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t\t@media (min-width: $desk-min-width){\n\t\t\t@include span-columns(3);\n\n\t\t\t&:nth-child(4n+4){\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t}\n\n\t.post-img {\n\t\tdisplay: block;\n\t}\n\n\t.post-desc {\n\t\t@include content-bg;\n\n\t\t.post-link {\n\t\t\t// @include transform(translateY(-60px));\n\t\t\t// background: rgba($white100, 0.7);\n\t\t\tposition: relative;\n\t\t\tfont-family: $cardo;\n\t\t\tfont-weight: 700;\n\t\t\tline-height: 1;\n\t\t\tmargin: 0;\n\n\t\t\t// padding: rem(5) rem(10);\n\t\t\t// border-left: solid rem(3) $accent-color;\n\t\t\tpadding: rem(5) rem(10);\n\t\t\tpadding-left: 0;\n\n\t\t\ta {\n\t\t\t\tfont-size: rem(20);\n\t\t\t\tcolor: $black300;\n\t\t\t}\n\t\t}\n\n\t\t.post-meta {\n\t\t\ttext-transform: uppercase;\n\t\t}\n\n\t\t.post-categories {\n\t\t\tdisplay: block;\n\t\t\tfont-size: rem(14);\n\t\t\tcolor: $black500;\n\t\t\tmargin-top: rem(5);\n\n\t\t\tli {\n\t\t\t\tposition: relative;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tpadding: rem(3) rem(6);\n\t\t\t\tmargin: 0;\n\t\t\t\tmargin-right: rem(4);\n\t\t\t\tmargin-bottom: rem(4);\n\t\t\t\twidth: auto;\n\t\t\t\tborder: solid 1px tint($black500, 20%);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.portfolio .navigation {\n\tnav {\n\t\t@include span-columns(12);\n\t\tmargin-bottom: rem(15);\n\n\t\t@media (min-width: $lap-min-width){\n\t\t\tmargin-bottom: rem(30);\n\t\t\t&.portfolio-filter {@include span-columns(9);}\n\t\t\t&.portfolio-sort {\n\t\t\t\t@include span-columns(3);\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t}\n\th4 {\n\t\tmargin: 0;\n\t\tmargin-bottom: rem(5);\n\t\tfont-family: $cardo;\n\t\tfont-weight: 700;\n\t}\n\tul {\n\t\t@extend .inline-lists;\n\n\t\tli {\n\t\t\t&.checked,\n\t\t\t&:hover,\n\t\t\t&:active {\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t}\n\n\t\tli button {\n\t\t\t@include block-tags;\n\t\t\tbackground-color: transparent;\n\t\t\tfont-family: $sourcesans;\n\t\t\tfont-size: rem(14);\n\t\t\t@include transition(all 0.25s ease-in-out);\n\n\t\t\t&.checked,\n\t\t\t&:hover,\n\t\t\t&:active {\n\t\t\t\tborder-color: shade($accent-color, 10%);\n\t\t\t\tcolor: shade($accent-color, 10%);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.portfolio .post-list.desandroed  {\n\tdisplay: inline-block;\n\twidth: 100%;\n\t// position: relative;\n\n\tli {\n\t\t@media (min-width: $mob-min-width){\n\t\t\tmargin-bottom: rem(20);\n\t\t}\n\t}\n}\n\n.post-sizer-desandro,\n.portfolio .post-item-desandro {\n\tfloat: left;\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: percentage(1);\n\toverflow: hidden;\n\n\t@media (min-width: $mob-min-width){ width: percentage(0.4745);}\n\t@media (min-width: $tab-min-width){ width: percentage(0.3128);}\n\t// @media (min-width: $hires-min-width){ width: percentage(0.230);}\n\t// @media (min-width: $desk-min-width){ width: percentage(0.185);}\n\n\t// &.featured {\n\t// @media (min-width: $lap-min-width){ width: percentage(0.230 * 2 + 0.019);}\n\t// }\n\n\t* {\n\t\t@include transition(0.4s all ease-in-out);\n\t}\n\n\n\t&:hover,\n\t&.no-mouse {\n\t\timg {\n\t\t\t@include filter(grayscale(10%) brightness(90%));\n\t\t}\n\n\t\t.post-desc {\n\t\t\t@include transform(translateY(1px));\n\t\t}\n\t}\n\n\t.post-desc {\n\t\tbackground-color: rgba($white200, 0.9);\n\t\t// @include background-image(linear-gradient(0deg, rgba($white200, 0.8) 10%, rgba($white200, 0.8) 60%));\n\t\t@include transform(translateY(200px));\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t\tpadding-left: rem(10);\n\t// display: none;\n\t// min-height: rem(140);\n\t// @media (min-width: $mob-min-width){ min-height: rem(140);}\n\t// @media (min-width: $tab-min-width){ min-height: rem(170);}\n\t// @media (min-width: $lap-min-width){ min-height: rem(166);}\n\t// @media (min-width: $desk-min-width){ min-height: rem(170);}\n\t// @media (min-width: $hires-min-width){ min-height: rem(160);}\n}\n}\n\n.post-gutter-desandro {\n\twidth: percentage(0);\n\n\t@media (min-width: $mob-min-width){ width: percentage(0.029);}\n\t@media (min-width: $tab-min-width){ width: percentage(0.024);}\n\t// @media (min-width: $hires-min-width){ width: percentage(0.019);}\n\t// @media (min-width: $desk-min-width){ width: percentage(0.014);}\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","\n.resume {\n\tbackground-color: $white100;\n\n\t.work-experience,\n\t.education,\n\t.skills-competency {\n\t\tmargin: rem(30) 0;\n\t}\n\n\t.work-experience,\n\t.education,\n\t.pretty-good,\n\t.kinda-okay {\n\t\t@include span-columns(12);\n\n\t\t@media (min-width: $tab-min-width){\n\t\t\t@include span-columns(6);\n\t\t}\n\t}\n\n\t.education,\n\t.kinda-okay {\n\t\t@media (min-width: $tab-min-width){\n\t\t\t@include omega();\n\t\t}\n\t}\n\n\t.content {\n\t\tmax-width: rem(500);\n\t}\n\n\t.item {\n\t\t@include inline-block-container;\n\t\tmargin-bottom: rem(50);\n\n\t\t> * {\n\t\t\tdisplay: block;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t.title {\n\t\t\tfont-family: $cardo;\n\t\t\tfont-size: rem(18);\n\t\t\tfont-weight: 600;\n\t\t\t// font-weight: 500;\n\t\t\tline-height: 1.15;\n\t\t\tmargin-bottom: rem(10);\n\t\t\tfont-size: rem(20);\n\t\t\t@media (min-width: $mob-min-width){\n\t\t\t\tfont-size: rem(21);\n\t\t\t}\n\t\t\t@media (min-width: $tab-min-width){\n\t\t\t\tfont-size: rem(22);\n\t\t\t}\n\t\t}\n\n\t\t.role,\n\t\t.period {\n\t\t\tfont-family: $sourcesans;\n\t\t\tmargin: 0;\n\t\t\tmargin-bottom: rem(5);\n\t\t}\n\n\t\t.role {\n\t\t\tcolor: $black400;\n\t\t\ttext-transform: uppercase;\n\t\t\tfont-size: rem(15);\n\t\t\tletter-spacing: 0.2px;\n\t\t\tline-height: 1.35;\n\t\t}\n\n\t\t.period {\n\t\t\tcolor: $base-color;\n\t\t\tfont-size: rem(14);\n\t\t\tmargin-bottom: rem(10);\n\t\t\tfont-style: italic;\n\t\t}\n\n\t\t.desc {\n\t\t\tpadding-left: rem(20);\n\n\t\t\t* {\n\t\t\t\tline-height: 1.5;\n\t\t\t}\n\n\t\t\tli,\n\t\t\tspan {\n\t\t\t\tmargin-bottom: rem(5);\n\t\t\t}\n\t\t}\n\t}\n}\n",".contact-me {\n\tbackground-color: $white150;\n\t.links-out {\n\t\t@include inline-lists;\n\n\t\tli:not(:last-child){\n\t\t\ta {\n\t\t\t\t&:after {\n\t\t\t\t\t// content: '/';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tli a {\n\t\t\tfont-family: $cardo;\n\t\t\tfont-size: rem(24);\n\t\t\tcolor: $black300;\n\t\t\tmargin: rem(5);\n\t\t\tpadding: 0 rem(10);\n\t\t\tdisplay: block;\n\t\t\tline-height: 1;\n\n\t\t\t&:first-child {\n\t\t\t\tmargin-left: 0;\n\t\t\t\tpadding-left: 0;\n\t\t\t}\n\t\t}\n\n\t\t// li:not(:last-child) a:after{\n\t\t// \tcontent: '-';\n\t\t// \tpadding-left: rem(5);\n\t\t// }\n\t}\n}\n","article {\n\t// @include outer-container();\n\n\theader,\n\t.post-content-wrapper {\n\t\t@include row();\n\t}\n\t.post-content {\n\t\t@include span-columns(12);\n\t\t@media (min-width: $tab-min-width){\n\t\t\t@include span-columns(8);\n\t\t}\n\t\t@media (min-width: $lap-min-width){\n\t\t\t@include span-columns(9);\n\t\t}\n\t\t// @media (min-width: $desk-min-width){\n\t\t// \t@include span-columns(10);\n\t\t// }\n\t}\n\n\t.post-meta {\n\t\t@include span-columns(12);\n\t\t@include omega();\n\n\t\t@media (min-width: $tab-min-width){\n\t\t\t@include span-columns(4);\n\t\t}\n\t\t@media (min-width: $lap-min-width){\n\t\t\t@include span-columns(3);\n\t\t}\n\t\t// @media (min-width: $desk-min-width){\n\t\t// \t@include span-columns(2);\n\t\t// }\n\t}\n\n\tblockquote {\n\t\tline-height: 1.2;\n\t\tborder-left-color: $accent-color;\n\t\tmargin-left: 0;\n\t\tfont-family: $cardo;\n\t\tfont-weight: 400;\n\t\tfont-style: normal;\n\n\t\tfont-size: rem(24);\n\t\tborder-left-width: rem(5);\n\t\t@media (min-width: $lap-min-width){\n\t\tfont-size: rem(36);\n\t\tborder-left-width: rem(10);\n\t\tline-height: 1.15;\n\t}\n\t}\n\n}\n"]}