{"version":3,"sources":["custom.scss","neat/grid/_box-sizing.scss","bourbon/css3/_font-face.scss","core/_oswald_italic.scss","bourbon/helpers/_font-source-declaration.scss","bourbon/css3/_selection.scss","core/_global.scss","bourbon/functions/_tint.scss","core/_variables.scss","bourbon/functions/_shade.scss","bourbon/functions/_px-to-rem.scss","neat/grid/_media.scss","core/_mixins.scss","core/_utility-class.scss","neat/grid/_row.scss","bourbon/addons/_clearfix.scss","core/_layout.scss","bourbon/css3/_background-image.scss","bourbon/helpers/_linear-gradient-parser.scss","bourbon/css3/_flex-box.scss","bourbon/addons/_prefixer.scss","core/_nav.scss","sect/_hero.scss","bourbon/css3/_keyframes.scss","sect/_about.scss","neat/grid/_span-columns.scss","neat/grid/_private.scss","neat/grid/_omega.scss","sect/_portfolio.scss","neat/grid/_outer-container.scss","sect/_resume.scss","sect/_contact.scss","sect/_post.scss"],"names":[],"mappings":"AAKA,6EAAY;AACZ,yJAAY;AACZ,gHAAY;ACJV;EACE,uBAAuB,EACxB;;AAED;EAII,oBAAoB,EACrB;;ACFH;EACE,sBCXuB;EDYvB,mBCZsF;EDatF,oBCb8E;EDe9E,4TESiC,EAAA;;AFdnC;EACE,sBCTuB;EDUvB,mBCVuF;EDWvF,iBCX+E;EDa/E,4UESiC,EAAA;;AFdnC;EACE,sBCPuB;EDQvB,mBCRiF;EDSjF,iBCTyE;EDWzE,oTESiC,EAAA;;AFdnC;EACE,sBCLuB;EDMvB,mBCNkF;EDOlF,iBCP0E;EDS1E,wTESiC,EAAA;;AFdnC;EACE,sBCHuB;EDIvB,mBCJqF;EDKrF,iBCL6E;EDO7E,oUESiC,EAAA;;AFdnC;EACE,sBCDuB;EDEvB,mBCFiF;EDGjF,kBCHyE;EDKzE,gTESiC,EAAA;;AFdnC;EACE,sBCCuB;EDAvB,mBCAiF;EDCjF,iBCDyE;EDGzE,oTESiC,EAAA;;ACSjC;EChCH,0BCqBY;EDpBZ,aEee,EHkBX;;AAED;ECpCH,0BCqBY;EDpBZ,aEee,EHsBX;;AClCL;EAGC,uBGcY;EHbZ,oBIIgB,EJKhB;EKwCG;ILrDJ;MAOE,qBICe,EJKhB,EAAA;EKwCG;ILrDJ;MAWE,gBIHe,EJKhB,EAAA;;AAED;EACC,eGCY,EHcZ;EAhBD;IAIE,0BGFW;IHGX,aERc,EHkBX;ECfL;IAIE,0BGFW;IHGX,aERc,EHsBX;ECnBL;IAUE,eGRW,EHSX;EAXF;IAcE,eGZW,EHaX;;AAGF;;;EAGC,4CEzCqC;EF0CrC,iBAAiB;EACjB,eCrBY,EDsBZ;;AAED;;EAEC,mFE5C6E;EF6C7E,eG3BY,EH4BZ;;AAED;EMnCC,4BFJgB;EEKhB,0BFLgB;EEkFhB,kBAAkB;EAClB,qBAAqB;EACrB,4EAA0B;EAC1B,oEAAkB;EN3ClB,kBEtCe,EFuCf;EKEG;ILNJ;MM/BE,0BFRe;MESf,2BFTe,EJ2ChB,EAAA;EKEG;ILNJ;MMiDE,kBAAkB;MAClB,qBAAqB;MACrB,4EAA0B;MAC1B,oEAAkB,ENhDnB,EAAA;EKEG;ILNJ;MMwDE,kBAAkB;MAClB,qBAAqB;MACrB,4EAA0B;MAC1B,oEAAkB,ENvDnB,EAAA;EKEG;ILNJ;MM+DE,kBAAkB;MAClB,qBAAqB;MACrB,4EAA0B;MAC1B,oEAAkB,EN9DnB,EAAA;;AAGD;;EAGE,mBAAiB;EACjB,eIlDe;EJmDf,8BAA0B;EAC1B,oBAAoB,EACpB;;AAPF;;EAUE,sBC/CW,EDgDX;;AAXF;;EAcE,eAAe;EACf,qBI7De;EJ8Df,wBI9De,EJ+Df;;AAjBF;;EAoBE,sBIlEe,EJmEf;;AOhFF;ECgDI,eAAe;ED9ClB,iBHWgB;EGVhB,eAAe,EACf;EAJD;IEoBI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB;;AFjBH;EAAS,aAAa,EAAG;;AAEzB;EAAY,YAAY,EAAG;;AAE3B;EACC,mBAAmB,EACnB;;AAED;EACC,cAAc,EACd;;AAED;EDkEC,iBAAiB;EACjB,UAAU;EACV,YAAY,EClEZ;EAFD;IDuEE,sBAAsB;IACtB,YAAY,EACZ;;ACrEF;EACC,eNDY,EMMZ;EAND;IAIE,eNJW,EMKX;;AG3BF;EACC,mBAAmB;EACnB,WAAW;EACX,WAAW,EACX;;AAED;EACC,gBAAgB;EAChB,WAAW,EAkBX;EApBD;IJWC,4BFJgB;IEKhB,0BFLgB;IEkFhB,kBAAkB;IAClB,qBAAqB;IACrB,4EAA0B;IAC1B,oEAAkB,EIpFhB;IL4CC;MKpDJ;QJeE,0BFRe;QESf,2BFTe,EMCd,EAAA;IL4CC;MKpDJ;QJ+FE,kBAAkB;QAClB,qBAAqB;QACrB,4EAA0B;QAC1B,oEAAkB,EI1FjB,EAAA;IL4CC;MKpDJ;QJsGE,kBAAkB;QAClB,qBAAqB;QACrB,4EAA0B;QAC1B,oEAAkB,EIjGjB,EAAA;IL4CC;MKpDJ;QJ6GE,kBAAkB;QAClB,qBAAqB;QACrB,4EAA0B;QAC1B,oEAAkB,EIxGjB,EAAA;EARH;IJqBC,qBFdgB;IEoIhB,yEAA0B;IAC1B,iEAAkB;IAClB,qBAAqB;IIhInB,yBNNc,EMWd;ILkCC;MKpDJ;QJwBE,oBFjBe,EMWd,EAAA;ILkCC;MKpDJ;QJgJE,yEAA0B;QAC1B,iEAAkB;QAClB,qBAAqB,EIhIpB,EAAA;ILkCC;MKpDJ;QJsJE,yEAA0B;QAC1B,iEAAkB;QAClB,qBAAqB,EItIpB,EAAA;ILkCC;MKpDJ;QJ4JE,yEAA0B;QAC1B,iEAAkB;QAClB,qBAAqB,EI5IpB,EAAA;ILkCC;MKpDJ;QAgBI,yBNTa,EMWd,EAAA;;AAIH;EJvBC,0BHiBY;EQkBX,oECvCe;EN0BhB,qBFdgB;EEoIhB,yEAA0B;EAC1B,iEAAkB;EAClB,qBAAqB;EInHrB,yBNnBgB,EMkDhB;EAnCD;IJfI,aJIY,EIJO;ED6CnB;IK9BJ;MJEE,oBFjBe,EMkDhB,EAAA;ELLG;IK9BJ;MJ0HE,yEAA0B;MAC1B,iEAAkB;MAClB,qBAAqB,EIzFtB,EAAA;ELLG;IK9BJ;MJgIE,yEAA0B;MAC1B,iEAAkB;MAClB,qBAAqB,EI/FtB,EAAA;ELLG;IK9BJ;MJsIE,yEAA0B;MAC1B,iEAAkB;MAClB,qBAAqB,EIrGtB,EAAA;ELLG;IK9BJ;MAOE,yBNtBe,EMkDhB,EAAA;EAnCD;IGyCI,qBAAqB;IACrB,kBAAkB;IAClB,aAAa;IAGb,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;IACrB,cAAc;IC1BV,kBJXqB;IILrB,4BJKqB;IIDrB,yBJCqB;IIGrB,wBJHqB;IIOrB,uBJPqB;IIWrB,oBJXqB;IG6M3B,uBH7M2B;IIWrB,iBJVyB;IINzB,gCJMyB;IIFzB,6BJEyB;IIEzB,4BJFyB;IIMzB,2BJNyB;IIUzB,wBJVyB;IGqL/B,sBHrL+B;IAE/B,iBN9Be;IM+Bf,YAAY;IACZ,eAAe,EACf;EAlBF;IAqBE,iBNpCe;IMqCf,YAAY,EACZ;EAvBF;IJaC,mFJrC6E;IIsC7E,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,0BAA0B;IAE1B,eHzBY;IG0BZ,UAAU;IIOT,mBN1Ce;IM2Cf,ePlCW,EOmCX;EA7BF;IJwBC,qBFvCgB;IEwChB,mFJjD6E;IIkD7E,iBAAiB;IAGjB,eHnCY;IGoCZ,sBAAsB;IIGrB,ePvCW,EOwCX;ILJE;MK9BJ;QJiCE,mBFhDe,EMiDf,EAAA;ILJE;MK9BJ;QJqCE,oBFpDe,EMiDf,EAAA;;AAGF;EAIC,mFRjE6E;EQkE7E,oBNzDgB;EM0DhB,mBAAmB;EACnB,0BAA0B;EAC1B,iBAAiB;EACjB,eTpDY,ES6DZ;ELzBG;IKOJ;MAYE,mBNhEe,EMsEhB,EAAA;ELzBG;IKOJ;MAgBE,oBNpEe,EMsEhB,EAAA;;AKnFD;EASE,wBAAwB,EACxB;;AAVF;EAaE,aAAa,EAKb;EAlBF;IAgBG,cZMU,EYLV;;AAjBH;EAuBG,cbCe,EaAf;;AAxBH;EA4BE,yEb1BsE;Ea2BtE,iBAAiB,EAwBjB;EVKE;IU1DJ;MAgCG,qBXnBc,EWwCf,EAAA;EViCE;IUtFJ;MAqCG,ebbe;Macf,4BXzBc,EWwCf,EAAA;EVKE;IU1DJ;MA0CG,eZpBU,EY+BX;MArDF;QA8CI,eZxBS,EY6BT,EAAA;IVOA;MU1DJ;QAiDK,eZ3BQ,EY6BT,EAAA;;AAMJ;ET9BC,qBFdgB;EW8ChB,wBAAwB;EACxB,uBAAuB;EACvB,uBXhDgB;EWiDhB,YAAY;EAEZ,oBAAoB,EACpB;EVPG;IUDJ;MT3BE,oBFjBe,EWoDhB,EAAA;;AAED;ETwDC,+DAA0B;EAC1B,uDAAkB;EAClB,kBAAkB;ESnDlB,mBAAmB;EAEnB,oBZtDY,EYoGZ;EVhEG;IUSJ;MT6DE,+DAA0B;MAC1B,uDAAkB;MAClB,kBAAkB,ESRnB,EAAA;EVhEG;IUSJ;MTmEE,+DAA0B;MAC1B,uDAAkB,ESbnB,EAAA;EVhEG;IUSJ;MTwEE,+DAA0B;MAC1B,uDAAkB,ESlBnB,EAAA;EAvDD;IAYE,yEb7EsE;Ia8EtE,sBAAsB;IACtB,eZ3DW,EY4DX;EAfF;;IAmBE,eZhEW,EYiEX;EApBF;IAuBE,cZpEW,EYqEX;EAxBF;ITxCC,qBFdgB;IWkFf,kBXlFe,EWiGf;IVpDE;MUSJ;QTrCE,oBFjBe,EWiGf,EAAA;IVpDE;MUSJ;QA+BG,qBXrFc,EWiGf,EAAA;IVpDE;MUSJ;QAmCG,WAAW;QACX,qBX1Fc,EWiGf,EAAA;IA3CF;MAwCG,gBAAgB;MAChB,oBAAoB,EACpB;EA1CH;IA8CE,eAAe,EAQf;IV/DE;MUSJ;QAiDG,uBXvGc,EW4Gf,EAAA;IV/DE;MUSJ;QAoDG,gBAAgB,EAEjB,EAAA;;ACzHF;EVKC,0BHiBY;EQkBX,oECvCe;EIChB,eAAe;EACf,kBAAkB,EA+DlB;EAlED;IVaI,aJIY,EIJO;EUbvB;IAME,eAAe;IACf,mBAAmB;IACnB,iBZKe;IYJf,eAAe,EACf;EAVF;IHqEI,qBAAqB;IACrB,kBAAkB;IAClB,aAAa;IAGb,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;IACrB,cAAc;IC1BV,eDwLW;ICxMX,8BErBuB;IFyBvB,2BEzBuB;IF6BvB,0BE7BuB;IFiCvB,yBEjCuB;IFqCvB,sBErCuB;IHuO7B,oBAViB;ICxLX,gBD2Ja;IC3Kb,oCEpB6B;IFwB7B,iCExB6B;IF4B7B,gCE5B6B;IFgC7B,+BEhC6B;IFoC7B,4BEpC6B;IH+MnC,qBAhBmB;IG9LnB,iBZHe,EYiBf;IX4BE;MW1DJ;QAmBG,kBZNc,EYiBf,EAAA;IX4BE;MW1DJ;QAsBG,cZTc,EYiBf,EAAA;IX4BE;MW1DJ;QAyBG,kBZZc,EYiBf,EAAA;IX4BE;MW1DJ;QA4BG,iBZfc,EYiBf,EAAA;EA9BF;IAiCE,YAAY;IACZ,mBAAiB,EACjB;EAnCF;IVyCC,mFJrC6E;IIsC7E,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,0BAA0B;IAE1B,eHzBY;IG0BZ,UAAU;IUTT,ebjBW;IakBX,oBZ3Be,EYmCf;IXUE;MW1DJ;QA2CG,gBZ9Bc,EYmCf,EAAA;IXUE;MW1DJ;QA8CG,qBZjCc,EYmCf,EAAA;EAhDF;IVoDC,qBFvCgB;IEwChB,mFJjD6E;IIkD7E,iBAAiB;IAGjB,eHnCY;IGoCZ,sBAAsB;IUNrB,eb9BW,EasCX;IXFE;MW1DJ;QV6DE,mBFhDe,EY+Cf,EAAA;IXFE;MW1DJ;QViEE,oBFpDe,EY+Cf,EAAA;IA5DF;MAyDG,adxCa;McyCb,iBAAiB,EACjB;EA3DH;IA+DE,iBZlDe;IYmDf,YAAY,EACZ;;AAIF;EAIC,wBZ5DgB,EYsEhB;EAdD;IFlCQ,uDEyCgD;IFzBhD,+CEyBgD;IACtD,kBAAkB;IAClB,cd7Dc;Ic8Dd,kBAAkB;IAClB,sBAAsB;IACtB,wBAAwB,EACxB;;ACvEE;ED2EH;IACC,qBAAqB,EAAA,EAAA;;ACxDnB;EDuDH;IACC,qBAAqB,EAAA,EAAA;;AEvFvB;EACC,oBjBqBY,EiBaZ;EAnCD;ICmEI,YAAO;IAGL,eAAe;IAef,uBCtEc;IDuEd,YC5Ec;IFLlB,sBdQe,EcCf;IAdF;MCyFQ,gBAA+B,EAChC;IdhCH;Ma1DJ;QCmEI,YAAO;QAGL,eAAe;QAef,uBCtEc;QDuEd,iBC5Ec;QFDjB,iBdIc,EcCf;QAdF;UCyFQ,gBAA+B,EAChC,EAAA;ID1FP;MAYgB,oBdCC,EcDqB;Eb8ClC;Ia1DJ;MCmEI,YAAO;MAGL,eAAe;MAef,uBCtEc;MDuEd,iBC5Ec;MC6Cd,gBAA+B;MHnClC,aAAa,EAMd;MA1BF;QCyFQ,gBAA+B,EAChC,EAAA;ED1FP;IAwBG,eAAe,EACf;EAzBH;IZ4EC,uCAA8B;IAC9B,wBFhEgB;IEiEhB,0BJtDiB;IIuDjB,eJvDiB;IIwDjB,eAAe,EY/Cb;;AAIH;EACC,6BfhBY,EeiBZ;;AIvCD;EACC,kBpBgBe,EoBff;;AAED;EACC,6BnBiBY,EmBhBZ;;AAED;;ECwBE,gBDrBiC;ECsBjC,kBACa;EADb,mBAEc,EDxBuB;EAHvC;;IbYI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB;;AafH;;EH2DI,YAAO;EAGL,eAAe;EAef,uBCtEc;EDuEd,YC5Ec,EE6BlB;EA/BF;;IHiFQ,gBAA+B,EAChC;EdJH;IiB9EJ;;MH2DI,YAAO;MAGL,eAAe;MAef,uBCtEc;MDuEd,iBC5Ec,EE6BlB;MA/BF;;QHiFQ,gBAA+B,EAChC;MGlFP;;QD+CM,gBAA+B,EChCjC,EAAA;EjB+DA;IiB9EJ;;MH2DI,YAAO;MAGL,eAAe;MAef,uBCtEc;MDuEd,iBC5Ec,EE6BlB;MA/BF;;QHiFQ,gBAA+B,EAChC;MGlFP;;QD+CM,gBAA+B,ECzBjC,EAAA;EjB4BA;IiBlDJ;;MH2DI,YAAO;MAGL,eAAe;MAef,uBCtEc;MDuEd,iBC5Ec,EE6BlB;MA/BF;;QHiFQ,gBAA+B,EAChC;MGlFP;;QD+CM,gBAA+B,EClBjC,EAAA;;AA7BJ;;EAkCE,eAAe,EACf;;AAnCF;;EhB2BC,4BFtBgB;EEuBhB,gBAAgB,EgB4Df;EAxFF;;IR2BQ,+BQiBoB;IRDpB,uBQCoB;IAGzB,mBAAmB;IACnB,mFpBpD2E;IoBqD3E,iBAAiB;IACjB,mBAAmB;IACnB,0BAA0B;IAC1B,eAAe;IACf,UAAU;IAIV,4BlBpDc;IkBqDd,gBAAgB,EAMhB;IAhEH;;MA6DI,oBlBxDa;MkByDb,enBhDS,EmBiDT;EA/DJ;;IAmEG,yEpBzEqE;IoB0ErE,0BAA0B,EAC1B;EArEH;;IAwEG,eAAe;IACf,oBlBpEc;IkBqEd,epBnEe;IoBoEf,sBlBtEc,EkBkFd;IAvFH;;MA8EI,mBAAmB;MACnB,sBAAsB;MACtB,4BlB3Ea;MkB4Eb,UAAU;MACV,sBlB7Ea;MkB8Eb,uBlB9Ea;MkB+Eb,YAAY;MACZ,0BrBvES,EqBwET;;AAKJ;;EHhCI,YAAO;EAGL,eAAe;EAef,uBCtEc;EDuEd,YC5Ec;EEgGlB,yBlB7Fe,EkBuGf;EAjBF;;IHVQ,gBAA+B,EAChC;EdhCH;IiByCJ;;MAUG,wBlBhGc,EkBuGf;MAjBF;;QHhCI,YAAO;QAGL,eAAe;QAef,uBCtEc;QDuEd,iBC5Ec,EEoG8B;QAXlD;;UHVQ,gBAA+B,EAChC;MGSP;;QHhCI,YAAO;QAGL,eAAe;QAef,uBCtEc;QDuEd,iBC5Ec;QC6Cd,gBAA+B,EC2DjC;QAfJ;;UHVQ,gBAA+B,EAChC,EAAA;;AGSP;EAoBE,UAAU;EACV,yBlB3Ge;EkB4Gf,yEpBvHsE;EoBwHtE,iBAAiB;EACjB,mBAAmB,EAEnB;;AA1BF;EhBvBC,uCAA8B;EAC9B,wBFhEgB;EEiEhB,0BHxDY;EGyDZ,eHzDY;EG0DZ,eAAe;EgBoDb,8BAA8B;EAC9B,yEpBnIqE;EoBoIrE,oBlBzHc;EUsCT,kCQoFoC,EASzC;EA7CH;IAyCI,gBAAgB;IAChB,sBrBvHS;IqBwHT,erBxHS,EqByHT;;AAKJ;EACC,sBAAsB;EACtB,YAAY,EAQZ;EjBpGG;IiB0FJ;MAOG,uBlB9Ic,EkBgJf,EAAA;;AAGF;;EAEC,YAAY;EACZ,sBAAsB;EACtB,mBAAmB;EACnB,YAAiB;EACjB,iBAAiB,EA2CjB;EjBvJG;IiBsGJ;;MAQiC,cAAiB,EAyCjD,EAAA;EjBvJG;IiBsGJ;;MASiC,cAAiB,EAwCjD,EAAA;EjBvJG;IiBsGJ;;MAckC,aAAiB,EACjD,EAAA;EAfF;;IR7GQ,iCQ+HkC,EACxC;EAnBF;;;IR7HQ,+CQsJoC;IRtIpC,uCQsIoC,EACzC;EA1BH;;;IR7HQ,mCQ0JwB;IR1IxB,2BQ0IwB,EAC7B;EA9BH;;IAkCE,2CnB5KW;IWaL,qCQiKuB;IRjJvB,6BQiJuB;IAC7B,mBAAmB;IACnB,UAAU;IACV,YAAY;IACZ,uBlB3Le,EkBmMhB;;AAGD;EACC,UAAiB,EAMjB;EjBhKG;IiByJJ;MAGiC,YAAiB,EAIjD,EAAA;EjBhKG;IiByJJ;MAIiC,YAAiB,EAGjD,EAAA;;AE1ND;EACC,wBtBgBe,EsB4Ef;EA7FD;;;IAME,mBAAiB,EACjB;EAPF;;;;ILmEI,YAAO;IAGL,eAAe;IAef,uBCtEc;IDuEd,YC5Ec,EIQlB;IAlBF;;;;MLyFQ,gBAA+B,EAChC;IdhCH;MmB1DJ;;;;QLmEI,YAAO;QAGL,eAAe;QAef,uBCtEc;QDuEd,iBC5Ec,EIQlB;QAlBF;;;;ULyFQ,gBAA+B,EAChC,EAAA;EdhCH;ImB1DJ;;MHuDM,gBAA+B,EG9BnC,EAAA;EAzBF;IA4BE,iBpBfe,EoBgBf;EA7BF;IlBsEC,sBAAsB;IACtB,mBAAmB;IACnB,YAAY;IkBvCX,wBpBpBe,EoB+Ef;IA5FF;MAoCG,eAAe;MACf,mBAAmB,EACnB;IAtCH;MAyCG,mFtBrC2E;MsBsC3E,oBpB7Bc;MoB8Bd,mBAAmB;MACnB,iBAAiB;MAEjB,kBAAkB;MAClB,wBpBlCc;MoBmCd,mBpBnCc,EoB0Cd;MnBGC;QmB1DJ;UAkDI,qBpBrCa,EoB0Cd,EAAA;MnBGC;QmB1DJ;UAqDI,oBpBxCa,EoB0Cd,EAAA;IAvDH;;MA2DG,yEtBzDqE;MsB0DrE,UAAU;MACV,yBpBhDc,EoBiDd;IA9DH;MAkEG,eAAe;MACf,0BAA0B;MAC1B,qBpBvDc;MoBwDd,sBAAsB;MACtB,kBAAkB,EAClB;IAvEH;MA0EG,etBlDe;MsBmDf,oBpB9Dc;MoB+Dd,wBpB/Dc;MoBgEd,mBAAmB,EACnB;IA9EH;MAiFG,sBpBpEc,EoB8Ed;MA3FH;QAoFI,iBAAiB,EACjB;MArFJ;;QAyFI,yBpB5Ea,EoB6Eb;;AAKJ;EACC,oBvB1EY,EuB2EZ;;ACjGD;EAMC,0BxBgBY,EwBSZ;EA/BD;InBoFC,iBAAiB;IACjB,UAAU;IACV,YAAY,EmBxDX;IA9BF;MnByFE,sBAAsB;MACtB,YAAY,EACZ;ImB3FF;MAWG,kBrBEc;MqBDd,oBrBCc;MqBAd,eAAe;MACf,eAAe,EAcf;MA5BH;QAiBI,eAAe;QACf,gBAAgB,EAChB;MAnBJ;QAsBI,yEvBpBoE;QuBqBpE,kBrBVa;QqBWb,mBAAmB;QACnB,exBHS;QwBIT,iBAAiB,EACjB;;AC3BJ;ElBgDI,eAAe,EkB3CjB;EALF;IjBoBI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB;;AiBvBH;;ElBgDI,eAAe;EkBtCjB,yBtBGe,EsBQf;EArBF;;IjBoBI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB;;AiBvBH;ElBgDI,eAAe;EkBtBjB,wBtBbe,EsB0Cf;EAvDF;IjBoBI,YAAY;IACZ,YAAY;IACZ,eAAe,EAChB;EiBvBH;IPmEI,YAAO;IAGL,eAAe;IAef,uBCtEc;IDuEd,iBC5Ec,EMqBjB;IA/BH;MPyFQ,gBAA+B,EAChC;EO1FP;IPmEI,YAAO;IAGL,eAAe;IAef,uBCtEc;IDuEd,iBC5Ec;IC6Cd,gBAA+B;IKnBlC,kBAAkB,EAClB;IArCH;MPyFQ,gBAA+B,EAChC;EO1FP;IAwCG,eAAe;IACf,oBtB5Bc;IsB6Bd,iBAAiB;IACjB,ezBrBU,EyBsBV;;AA5CH;EA2DG,eAAe;EACf,YAAY;EACZ,mBAAmB;EACnB,yBtBjDc,EsBkDd;;AA/DH;EpB4EC,uCAA8B;EAC9B,wBFhEgB;EEiEhB,0BJtDiB;EIuDjB,eJvDiB;EIwDjB,eAAe;EQ7BR,kCYqBqC;EACzC,8BAA8B;EAC9B,yExBxEoE;EwByEpE,oBtB9Da;EsB+Db,oBAAoB;EACpB,ezBvDS,EyBgET;EAtFJ;IAkFK,gBAAgB;IAChB,sBvB7DQ;IuB8DR,evB9DQ,EuB+DR;;AArFL;EA2FE,iBAAiB;EACjB,2BzBtEW;EyBuEX,eAAe;EACf,4CxB9FoC;EwB+FpC,iBAAiB;EACjB,mBAAmB;EAEnB,kBtBrFe;EsBsFf,6BtBtFe,EsB4Ff;ErB/CE;IqB1DJ;MAqGG,mBtBxFc;MsByFd,4BtBzFc;MsB0Fd,kBAAkB,EAEnB,EAAA;;AhChFF;EACC,eAAe;EACf,mBAAmB;EACnB,UAAU;EACV,UAAU;EACV,0BORY;EPSZ,mBUlBgB,EViChB;EArBD;IASE,sBAAsB;IACtB,aQlBc;IRmBd,gBUvBe;IVwBf,iBAAiB,EAQjB;IApBF;MAgBG,2BAA2B;MAC3B,eSpBU,ETsBV","file":"custom.css","sourcesContent":["@import 'bourbon/bourbon';\n@import 'neat/neat';\n\n@import 'core/oswald_italic';\n\n@import url(https://fonts.googleapis.com/css?family=Cardo:400,400italic,700);\n@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,200,200italic,300,300italic,400italic,600,600italic,700italic,700,900,900italic);\n@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:700italic,400italic,300italic,700,400,300);\n// @import url(https://fonts.googleapis.com/css?family=Roboto:400,100,100italic,300,300italic,400italic,500,500italic,700,700italic,900,900italic);\n\n@import 'core/variables';\n@import 'core/mixins';\n@import 'core/global';\n@import 'core/utility-class';\n@import 'core/layout';\n@import 'core/nav';\n\n@import 'sect/hero';\n@import 'sect/about';\n@import 'sect/portfolio';\n@import 'sect/resume';\n@import 'sect/contact';\n@import 'sect/post';\n\n// Temporary: Remove once done\nheader.notice {\n\tdisplay: block;\n\tposition: relative;\n\tmargin: 0;\n\tborder: 0;\n\tbackground-color: $accent-color;\n\tpadding: rem(15);\n\n\tspan {\n\t\tletter-spacing: 0.2px;\n\t\tcolor: $white100;\n\t\tfont-size: rem(16);\n\t\tfont-weight: 400;\n\t\t// color: $black200;\n\n\t\ta {\n\t\t\ttext-decoration: underline;\n\t\t\tcolor: $white300;\n\t\t\t// color: $black300;\n\t\t}\n\t}\n}\n","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-RegularItalic\", normal, italic, $file-formats: eot woff2 woff ttf);\n\n@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-Extra-LightItalic\", 100, italic, $file-formats: eot woff2 woff ttf);\n\n@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-LightItalic\", 300, italic, $file-formats: eot woff2 woff ttf);\n\n@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-MediumItalic\", 500, italic, $file-formats: eot woff2 woff ttf);\n\n@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-Demi-BoldItalic\", 600, italic, $file-formats: eot woff2 woff ttf);\n\n@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-BoldItalic\", bold, italic, $file-formats: eot woff2 woff ttf);\n\n@include font-face(\"Oswald\", \"../fonts/oswald/hinted-Oswald-HeavyItalic\", 900, italic, $file-formats: eot woff2 woff ttf);\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@include selection {\n\tbackground-color: tint($black200, 15%);\n\tcolor: $white100;\n}\n\nbody {\n\t$body-background: $white150;\n\n\tbackground: $body-background;\n\tfont-size: rem(14);\n\n\t@include media($mob-min-width){\n\t\tfont-size: rem(15);\n\t}\n\n\t@include media($tab-min-width){\n\t\tfont-size: rem(16);\n\t}\n}\n\na {\n\tcolor: shade($accent-color, 10%);\n\n\t@include selection {\n\t\tbackground-color: shade($accent-color, 5%);\n\t\tcolor: $white100;\n\t}\n\n\t&:hover,\n\t&:active {\n\t\tcolor: shade($accent-color, 15%);\n\t}\n\n\t&:visited {\n\t\tcolor: shade($accent-color, 10%);\n\t}\n}\n\np,\nli,\nspan {\n\tfont-family: $body-family;\n\tline-height: 1.8;\n\tcolor: $black400;\n}\n\nh1,\nh2 {\n\tfont-family: $header-family;\n\tcolor: $base-color200;\n}\n\narticle {\n\t@include sect-padding;\n\t@include clip-path-both;\n\tbackground: $white100;\n}\n\n\nhr,\nspan {\n\t&.short {\n\t\tmargin: rem(30) 0;\n\t\twidth: rem(100);\n\t\tborder-width: rem(3) 0 0 0;\n\t\tborder-style: solid;\n\t}\n\n\t&.red {\n\t\tborder-color: $accent-color;\n\t}\n\n\t&.center {\n\t\tmargin: 0 auto;\n\t\tmargin-top: rem(30);\n\t\tmargin-bottom: rem(30);\n\t}\n\n\t&.header {\n\t\tmargin-top: rem(30/2);\n\t}\n}\n\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","$cardo: \"Cardo\", Georgia, Times, serif;\n$sourcesans: \"Source Sans Pro\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n$robotocond: \"Roboto Condensed\", \"Helvetica Neue\", Helvetica, sans-serif;\n// $sourcesans: \"Roboto\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n$oswald: \"Oswald\", \"Roboto Condensed\", \"Hevletica Neue\", Helvetica, sans-serif;\n\n\n$header-family: $oswald;\n$body-family: $cardo;\n$suppl-family: $robotocond;\n\n$black100: tint(black, 3%);\n$black200: tint($black100, 15%);\n$black300: tint($black200, 15%);\n$black400: tint($black300, 15%);\n$black500: #828282;\n\n$white100: white;\n$white150: shade($white100, 4%);\n$white200: shade($white100, 8%);\n$white300: shade($white200, 8%);\n$white400: shade($white300, 8%);\n\n$new-cool-blue: #E5E7F1;\n$new-blue: #2c56af;\n\n$background-color100: tint($new-cool-blue, 22%);\n$background-color200: tint($background-color100, 42%);\n$background-color300: shade($background-color100, 5%);\n\n// $base-color: $black200;\n$base-color: $new-blue;\n$base-color200: shade($base-color, 25%);\n$base-color300: tint($base-color200, 10%);\n\n$accent-color: tint(#002F91, 40%);\n\n$mob-min-width: 640px;\n$tab-min-width: 768px;\n$lap-min-width: 1024px;\n$desk-min-width: 1200px;\n$hires-min-width: 1440px;\n\n$shadow1: 0 1px 3px rgba($black100,0.12), 0 1px 2px rgba($black100,0.24);\n$shadow2: 0 10px 20px rgba($black100,0.19), 0 6px 6px rgba($black100,0.23);\n$shadow3: 0 10px 20px rgba($black100,0.19), 0 6px 6px rgba($black100,0.23);\n$shadow4: 0 14px 28px rgba($black100,0.25), 0 10px 10px rgba($black100,0.22);\n$shadow5: 0 19px 38px rgba($black100,0.30), 0 15px 12px rgba($black100,0.22);\n\n$content-width: rem(960);","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","@mixin hero-colors {\n\t// background-color: $base-color;\n\t// background-color: tint($white200, 60%);\n\t// background-color: $white200;\n\n\tbackground-color: $background-color300;\n\t// background: url(\"http://subtlepatterns2015.subtlepatterns.netdna-cdn.com/patterns/concrete_seamless.png\");\n\t// border-bottom: solid 1px $white400;\n\t// @include background-image(linear-gradient(180deg, $background-color200 0%, $background-color300 100%));\n\t@include background-image(linear-gradient(180deg, $base-color200 0%, $base-color300 100%));\n\n\t// * {color: $white200};\n\t// * {color: $base-color};\n\t* {color: $white100;};\n}\n\n@mixin sect-padding {\n\tpadding: rem(70) rem(15);\n\tpadding: rem(120) rem(15); // clip-path version\n\n\t@include media($mob-min-width){\n\t\tpadding: rem(100) rem(30);\n\t\tpadding: rem(150) rem(30); // clip-path version\n\t}\n}\n\n@mixin sect-side-padding {\n\tpadding: 0 rem(15);\n\n\t@include media($mob-min-width){\n\t\tpadding: 0 rem(30);\n\t}\n}\n\n@mixin content-bg {\n\tpadding: rem(10) rem(15);\n\tpadding-left: 0;\n}\n\n@mixin title-styling {\n\t// @include transform(scaleY(1.1));\n\tfont-family: $header-family;\n\tline-height: 1;\n\tfont-weight: 600;\n\tfont-style: italic;\n\ttext-transform: uppercase;\n\t// color: $black300;\n\tcolor: $base-color200;\n\tmargin: 0;\n}\n\n@mixin subtitle-styling {\n\tfont-size: rem(19);\n\tfont-family: $header-family;\n\tfont-weight: 300;\n\t// color: shade($white400, 15%);\n\t// color: $black200;\n\tcolor: $base-color200;\n\tletter-spacing: 0.3px;\n\n\t@include media($mob-min-width){\n\t\tfont-size: rem(20);\n\t}\n\n\t@include media($tab-min-width){\n\t\tfont-size: rem(22);\n\t}\n}\n\n@mixin inline-block-container {\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: 100%;\n}\n\n@mixin block-tags($color: $base-color) {\n\tmargin: rem(3) rem(6) rem(3) 0;\n\tpadding: rem(8) rem(12);\n\tborder: solid 1px $color;\n\tcolor: $color;\n\tdisplay: block;\n}\n\n@mixin inline-lists {\n\tlist-style: none;\n\tmargin: 0;\n\tfloat: left;\n\n\tli {\n\t\tdisplay: inline-block;\n\t\tfloat: left;\n\t}\n}\n\n@mixin clip-path-both {\n\tmargin-top: -20px;\n\tmargin-bottom: -20px;\n\t-webkit-clip-path: polygon(0 20px, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tclip-path: polygon(0 20px, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\n\t@include media($tab-min-width){\n\t\tmargin-top: -30px;\n\t\tmargin-bottom: -30px;\n\t\t-webkit-clip-path: polygon(0 30px, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\t\tclip-path: polygon(0 30px, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\t}\n\n\t@include media($desk-min-width){\n\t\tmargin-top: -40px;\n\t\tmargin-bottom: -40px;\n\t\t-webkit-clip-path: polygon(0 40px, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\t\tclip-path: polygon(0 40px, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\t}\n\n\t@include media($hires-min-width){\n\t\tmargin-top: -60px;\n\t\tmargin-bottom: -60px;\n\t\t-webkit-clip-path: polygon(0 60px, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\t\tclip-path: polygon(0 60px, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\t}\n}\n\n@mixin clip-path-up {\n\t-webkit-clip-path: polygon(0 20px, 100% 0, 100% 100%, 0% 100%);\n\tclip-path: polygon(0 20px, 100% 0, 100% 100%, 0% 100%);\n\tmargin-top: -20px;\n\n\t@include media($tab-min-width){\n\t\t-webkit-clip-path: polygon(0 30px, 100% 0, 100% 100%, 0% 100%);\n\t\tclip-path: polygon(0 30px, 100% 0, 100% 100%, 0% 100%);\n\t\tmargin-top: -30px;\n\t}\n\n\t@include media($desk-min-width){\n\t\t-webkit-clip-path: polygon(0 40px, 100% 0, 100% 100%, 0% 100%);\n\t\tclip-path: polygon(0 40px, 100% 0, 100% 100%, 0% 100%);\n\t}\n\n\t@include media($hires-min-width){\n\t\t-webkit-clip-path: polygon(0 60px, 100% 0, 100% 100%, 0% 100%);\n\t\tclip-path: polygon(0 60px, 100% 0, 100% 100%, 0% 100%);\n\t}\n}\n\n@mixin clip-path-down {\n\t-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 20px), 0% 100%);\n\tmargin-bottom: -20px;\n\n\t@include media($tab-min-width){\n\t\t-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\t\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 30px), 0% 100%);\n\t\tmargin-bottom: -30px;\n\t}\n\n\t@include media($desk-min-width){\n\t\t-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\t\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 40px), 0% 100%);\n\t\tmargin-bottom: -40px;\n\t}\n\n\t@include media($hires-min-width){\n\t\t-webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\t\tclip-path: polygon(0 0, 100% 0, 100% calc(100% - 60px), 0% 100%);\n\t\tmargin-bottom: -60px;\n\t}\n}\n",".row {\n\t@include row();\n\tmax-width: $content-width;\n\tmargin: 0 auto;\n}\n\n.right { float: right;}\n\n.clearfix { clear: both;}\n\n.text-center {\n\ttext-align: center;\n}\n\n.hidden {\n\tdisplay: none;\n}\n\n.inline-lists {\n\t@include inline-lists;\n}\n\n.read-more {\n\tcolor: $black200;\n\n\t&:visited {\n\t\tcolor: $black400;\n\t}\n}\n","@charset \"UTF-8\";\n\n/// Designates the element as a row of columns in the grid layout. It clears the floats on the element and sets its display property. Rows can't be nested, but there can be more than one row element—with different display properties—per layout.\n///\n/// @param {String} $display [default]\n///  Sets the display property of the element and the display context that will be used by its children. Can be `block` or `table`.\n///\n/// @param {String} $direction [$default-layout-direction]\n///  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\n///\n/// @example scss - Usage\n///  .element {\n///    @include row();\n///  }\n///\n/// @example css - CSS Output\n///  .element {\n///    *zoom: 1;\n///    display: block;\n///  }\n///\n/// .element:before, .element:after {\n///   content: \" \";\n///   display: table;\n/// }\n///\n/// .element:after {\n///   clear: both;\n/// }\n\n@mixin row($display: default, $direction: $default-layout-direction) {\n  @if $direction != $default-layout-direction {\n    @include -neat-warn(\"The $direction argument will be deprecated in future versions in favor of the direction(){...} mixin.\");\n  }\n\n  $layout-direction: $direction !global;\n\n  @if $display != default {\n    @include -neat-warn(\"The $display argument will be deprecated in future versions in favor of the display(){...} mixin.\");\n  }\n\n  @if $display == table {\n    display: table;\n    @include fill-parent;\n    table-layout: fixed;\n    $container-display-table: true !global;\n  } @else {\n    @include clearfix;\n    display: block;\n    $container-display-table: false !global;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n",".page-content {\n\tposition: relative;\n\tpadding: 0;\n\tz-index: 9;\n}\n\n.wrapper {\n\tmax-width: 100%;\n\tpadding: 0;\n\n\t> section {\n\t\t&:not(.hero){\n\t\t\t@include sect-padding;\n\t\t\t@include clip-path-both;\n\t\t}\n\n\t\t&.hero {\n\t\t\t@include sect-side-padding;\n\t\t\t@include clip-path-down;\n\t\t\tpadding-bottom: rem(30); // clip-path version\n\n\t\t\t@include media($mob-min-width){\n\t\t\t\tpadding-bottom: rem(50); // clip-path version\n\t\t\t}\n\t\t}\n\t}\n}\n\n.page-content-header {\n\t@include hero-colors;\n\t@include sect-side-padding;\n\t@include clip-path-down;\n\tpadding-bottom: rem(30);\n\n\t@include media($mob-min-width){\n\t\tpadding-bottom: rem(50); // clip-path version\n\t}\n\n\t.header-wrapper {\n\t\t@include display(flex);\n\t\t@include align-items(center);\n\t\t@include justify-content(center);\n\n\t\theight: rem(300);\n\t\twidth: 100%;\n\t\tmargin: 0 auto;\n\t}\n\n\t.header-content {\n\t\tmax-width: $content-width;\n\t\twidth: 100%;\n\t}\n\n\t.title {\n\t\t@include title-styling;\n\t\tfont-size: rem(44);\n\t\tcolor: $white300;\n\t}\n\n\t.subtitle {\n\t\t@include subtitle-styling;\n\t\tcolor: $white300;\n\t}\n}\n\n.page-heading {\n\t$page-heading-font-family: $header-family;\n\t$page-heading-color: $base-color300;\n\n\tfont-family: $page-heading-font-family;\n\tfont-size: rem(26);\n\tfont-style: italic;\n\ttext-transform: uppercase;\n\tfont-weight: 600;\n\tcolor: $page-heading-color;\n\n\t@include media($mob-min-width){\n\t\tfont-size: rem(28);\n\t}\n\n\t@include media($tab-min-width){\n\t\tfont-size: rem(30);\n\t}\n}","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n",".site-nav {\n\t$nav-background: $white200;\n\t$nav-font-family: $suppl-family;\n\t$nav-font-color: $white200;\n\t$nav-font-color-hov: $white300;\n\t// $nav-background: shade(#E5E7F1, 5%);\n\t// $nav-font-color-hov: $white100;\n\t\n\t&:not(:hover):not(:active):not(:focus) {\n\t\tbackground: transparent;\n\t}\n\n\t.menu-icon {\n\t\theight: 36px;\n\n\t\t> svg path {\n\t\t\tfill: $nav-font-color;\n\t\t}\n\t}\n\n\t&:hover,\n\t&:active {\n\t\t.menu-icon > svg path {\n\t\t\tfill: $base-color;\n\t\t}\n\t}\n\n\t.page-link {\n\t\tfont-family: $nav-font-family;\n\t\tfont-weight: 400;\n\n\t\t@include media($mob-min-width){\n\t\t\tfont-size: rem(15);\n\t\t}\n\n\t\t\n\t\t@include media(max-width 600px) {\n\t\t\tcolor: $base-color;\n\t\t\tpadding: rem(10) rem(15);\n\t\t}\n\n\t\t@include media(601px) {\n\t\t\tcolor: $nav-font-color;\n\n\t\t\t&:hover,\n\t\t\t&:active {\n\t\t\t\tcolor: $nav-font-color-hov;\n\n\t\t\t\t@include media($mob-min-width){\n\t\t\t\t\tcolor: $nav-font-color-hov;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n.site-header {\n\t@include sect-side-padding;\n\tbackground: transparent;\n\tborder-bottom-width: 0;\n\tmargin-bottom: rem(-56);\n\tz-index: 10;\n\t// border-top-color: shade($accent-color, 30%);\n\tborder-top-width: 0;\n}\n\n.site-footer {\n\t$footer-background: $white200;\n\t$footer-background:\t$background-color300;\n\t$footer-font-family: $suppl-family;\n\t$footer-color: $base-color200;\n\n\t@include clip-path-up;\n\tposition: relative;\n\n\tbackground: $footer-background;\n\n\t* {\n\t\tfont-family: $footer-font-family;\n\t\tletter-spacing: 0.3px;\n\t\tcolor: $footer-color;\n\t}\n\n\ta, \n\ta * {\n\t\tcolor: shade($footer-color, 20%);\n\t}\n\n\t.icon > svg path {\n\t\tfill: shade($footer-color, 20%);\n\t}\n\n\t.wrapper .row {\n\t\t@include sect-side-padding;\n\t\tpadding-top: rem(80); // clip-path version\n\n\t\t@include media($mob-min-width){\n\t\t\tpadding-top: rem(100); // clip-path version\n\t\t}\n\n\t\t@include media($desk-min-width){\n\t\t\tpadding: 0;\n\t\t\tpadding-top: rem(100); // clip-path version\n\t\t}\n\n\t\t.footer-col {\n\t\t\tpadding-left: 0;\n\t\t\tpadding-right: 15px;\n\t\t}\n\t}\n\n\t.footer-col-wrapper {\n\t\tmargin-left: 0;\n\n\t\t@include media($desk-min-width){\n\t\t\tpadding-left: rem(30);\n\t\t}\n\t\t@include media($hires-min-width){\n\t\t\tpadding-left: 0;\n\t\t}\n\t}\n}",".hero {\n\t@include hero-colors;\n\tpadding-top: 0;\n\tpadding-bottom: 0;\n\n\t.hero-wrapper {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tmax-width: $content-width;\n\t\tmargin: 0 auto;\n\t}\n\n\t.row {\n\t\t@include display(flex);\n\t\t@include align-items(flex-end);\n\t\t@include justify-content(flex-start);\n\t\theight: rem(300);\n\n\t\t@include media($mob-min-width){\n\t\t\theight: rem(350);\n\t\t}\n\t\t@include media($tab-min-width){\n\t\t\theight: rem(400);\n\t\t}\n\t\t@include media($lap-min-width){\n\t\t\theight: rem(450);\n\t\t}\n\t\t@include media($hires-min-width){\n\t\t\theight: rem(500);\n\t\t}\n\t}\n\n\t.content {\n\t\twidth: 100%;\n\t\tmargin: rem(50) 0;\n\t}\n\n\t.title {\n\t\t@include title-styling;\n\t\tcolor: $white300;\n\t\tfont-size: rem(42);\n\n\t\t@include media($mob-min-width){\n\t\t\tfont-size: rem(48);\n\t\t}\n\t\t@include media($tab-min-width){\n\t\t\tfont-size: rem(55);\n\t\t}\n\t}\n\n\t.subtitle {\n\t\t@include subtitle-styling;\n\t\tcolor: $white300;\n\n\t\ta {\n\t\t\t// color: $white100;\n\t\t\t// color: $black300;\n\t\t\tcolor: $white100;\n\t\t\tfont-weight: 400;\n\t\t}\n\t}\n\n\t.title-logo {\n\t\tmax-width: rem(720);\n\t\twidth: 100%;\n\t}\n}\n\n\n#hero-name {\n\t// $hero-stroke-color: $base-color300;\n\t$hero-stroke-color: $white100;\n\n\tmargin-bottom: rem(10);\n\n\tpath {\n\t\t@include animation(name-dash 1.5s ease-in-out forwards);\n\t\tfill: transparent;\n\t\tstroke: $hero-stroke-color;\n\t\tstroke-width: 1px;\n\t\tstroke-dasharray: 900;\n\t\tstroke-dashoffset: 1900;\n\t}\n}\n\n@include keyframes(name-dash) {\n\tto {\n\t\tstroke-dashoffset: 0;\n\t}\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n",".about {\n\tbackground: $background-color200;\n\n\t.content {\n\t\t@include span-columns(12);\n\t\tmargin-top: rem(15);\n\n\t\t@include media($tab-min-width){\n\t\t\t@include span-columns(8);\n\t\t\tmargin-top: rem(0);\n\t\t}\n\n\t.description { max-width: rem(700);}\n\n\t}\n\n\t.image-wrapper {\n\t\t@include media($tab-min-width){\n\t\t\t@include span-columns(4);\n\t\t\t@include omega();\n\t\t\tfloat: right;\n\t\t}\n\n\t\t.avater {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t.skills {\n\t\t@extend .inline-lists;\n\n\t\tli span {\n\t\t\t@include block-tags;\n\t\t}\n\t}\n}\n\n.About {\n\tbackground-color: $white150;\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n","@charset \"UTF-8\";\n\n/// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\n///\n/// @param {List} $query [block]\n///   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\n///\n///   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.\n///\n///   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.\n///\n/// @example scss - Usage\n///   .element {\n///     @include omega;\n///   }\n///\n///   .nth-element {\n///     @include omega(4n);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n) {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n+1) {\n///     clear: left;\n///   }\n\n@mixin omega($query: block, $direction: default) {\n  $table: belongs-to(table, $query);\n  $auto: belongs-to(auto, $query);\n\n  @if $direction != default {\n    @include -neat-warn(\"The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.\");\n  } @else {\n    $direction: get-direction($layout-direction, $default-layout-direction);\n  }\n\n  @if $table {\n    @include -neat-warn(\"The omega mixin no longer removes padding in table layouts.\");\n  }\n\n  @if length($query) == 1 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n\n    @else if contains-display-value($query) and $table == false {\n      margin-#{$direction}: 0;\n    }\n\n    @else {\n      @include nth-child($query, $direction);\n    }\n  } @else if length($query) == 2 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    } @else {\n      @include nth-child(nth($query, 1), $direction);\n    }\n  } @else {\n    @include -neat-warn(\"Too many arguments passed to the omega() mixin.\");\n  }\n}\n\n@mixin nth-child($query, $direction) {\n  $opposite-direction: get-opposite-direction($direction);\n\n  &:nth-child(#{$query}) {\n    margin-#{$direction}: 0;\n  }\n\n  @if type-of($query) == number and unit($query) == \"n\" {\n    &:nth-child(#{$query}+1) {\n      clear: $opposite-direction;\n    }\n  }\n}\n",".recent-work {\n\tbackground: $white100;\n}\n\n.portfolio {\n\tbackground-color: $white150;\n}\n\n.recent-work,\n.portfolio .list {\n\n\tul { @include outer-container(100%);}\n\n\tli:not([class$=\"desandro\"]) {\n\t// li {\n\t\t@include span-columns(12);\n\t\t// box-shadow: $shadow1;\n\n\t\t@include media(min-width $mob-min-width max-width $tab-min-width) {\n\t\t\t@include span-columns(6);\n\n\t\t\t&:nth-child(2n+2){\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t\t@include media(min-width $tab-min-width max-width $desk-min-width) {\n\t\t\t@include span-columns(6);\n\n\t\t\t&:nth-child(2n+2){\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t\t@include media($desk-min-width){\n\t\t\t@include span-columns(3);\n\n\t\t\t&:nth-child(4n+4){\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t}\n\n\t.post-img {\n\t\tdisplay: block;\n\t}\n\n\t.post-desc {\n\t\t// $post-link-color: $black300;\n\t\t$post-link-color: $base-color200;\n\n\t\t@include content-bg;\n\n\t\t.post-link {\n\t\t\t@include transform(scaleY(1.1));\n\t\t\t// @include transform(translateY(-60px));\n\t\t\t// background: rgba($white100, 0.7);\n\t\t\tposition: relative;\n\t\t\tfont-family: $header-family;\n\t\t\tfont-weight: 400;\n\t\t\tfont-style: italic;\n\t\t\ttext-transform: uppercase;\n\t\t\tline-height: 1;\n\t\t\tmargin: 0;\n\n\t\t\t// padding: rem(5) rem(10);\n\t\t\t// border-left: solid rem(3) $accent-color;\n\t\t\tpadding: rem(5) rem(10);\n\t\t\tpadding-left: 0;\n\n\t\t\ta {\n\t\t\t\tfont-size: rem(18);\n\t\t\t\tcolor: $post-link-color;\n\t\t\t}\n\t\t}\n\n\t\t.post-meta {\n\t\t\tfont-family: $suppl-family;\n\t\t\ttext-transform: uppercase;\n\t\t}\n\n\t\t.post-categories {\n\t\t\tdisplay: block;\n\t\t\tfont-size: rem(14);\n\t\t\tcolor: $black500;\n\t\t\tmargin-top: rem(5);\n\n\t\t\tli {\n\t\t\t\tposition: relative;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tpadding: rem(3) rem(6);\n\t\t\t\tmargin: 0;\n\t\t\t\tmargin-right: rem(4);\n\t\t\t\tmargin-bottom: rem(4);\n\t\t\t\twidth: auto;\n\t\t\t\tborder: solid 1px tint($black500, 20%);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.portfolio .navigation {\n\t// $pf-link-color: shade($accent-color, 10%);\n\t$pf-link-color: $base-color200;\n\n\t.portfolio-filter,\n\t.portfolio-sort {\n\t\t@include span-columns(12);\n\t\tmargin-bottom: rem(15);\n\n\t\t@include media($lap-min-width){\n\t\t\tmargin-bottom: rem(30);\n\t\t\t&.portfolio-filter {@include span-columns(9);}\n\t\t\t&.portfolio-sort {\n\t\t\t\t@include span-columns(3);\n\t\t\t\t@include omega();\n\t\t\t}\n\t\t}\n\t}\n\n\t.filter-header {\n\t\tmargin: 0;\n\t\tmargin-bottom: rem(5);\n\t\tfont-family: $suppl-family;\n\t\tfont-weight: 400;\n\t\tfont-style: italic;\n\t\t// text-transform: uppercase;\n\t}\n\n\t.portfolio-filter-list {\n\t\t@extend .inline-lists;\n\n\t\tli button {\n\t\t\t@include block-tags($pf-link-color);\n\t\t\tbackground-color: transparent;\n\t\t\tfont-family: $suppl-family;\n\t\t\tfont-size: rem(14);\n\t\t\t@include transition(all 0.25s ease-in-out);\n\n\t\t\t&.checked,\n\t\t\t&:hover,\n\t\t\t&:active {\n\t\t\t\tcursor: pointer;\n\t\t\t\tborder-color: tint($pf-link-color, 23%);\n\t\t\t\tcolor: tint($pf-link-color, 23%);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.portfolio .post-list.desandroed  {\n\tdisplay: inline-block;\n\twidth: 100%;\n\t// position: relative;\n\n\tli {\n\t\t@include media($mob-min-width){\n\t\t\tmargin-bottom: rem(20);\n\t\t}\n\t}\n}\n\n.post-sizer-desandro,\n.portfolio .post-item-desandro {\n\tfloat: left;\n\tdisplay: inline-block;\n\tposition: relative;\n\twidth: percentage(1);\n\toverflow: hidden;\n\n\t@include media($mob-min-width){ width: percentage(0.4745);}\n\t@include media($tab-min-width){ width: percentage(0.3128);}\n\t// @include media($hires-min-width){ width: percentage(0.230);}\n\t// @include media($desk-min-width){ width: percentage(0.185);}\n\n\t&.featured {\n\t\t@include media($lap-min-width){ width: percentage(0.230 * 2 + 0.019);}\n\t}\n\n\t* {\n\t\t@include transition(0.4s all ease-in-out);\n\t}\n\n\n\t&:hover,\n\t&.no-mouse {\n\t\timg {\n\t\t\t@include filter(grayscale(10%) brightness(90%));\n\t\t}\n\n\t\t.post-desc {\n\t\t\t@include transform(translateY(1px));\n\t\t}\n\t}\n\n\t.post-desc {\n\t\tbackground-color: rgba($white200, 0.9);\n\t\t// @include background-image(linear-gradient(0deg, rgba($white200, 0.8) 10%, rgba($white200, 0.8) 60%));\n\t\t@include transform(translateY(200px));\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t\tpadding-left: rem(10);\n\t// display: none;\n\t// min-height: rem(140);\n\t// @include media($mob-min-width){ min-height: rem(140);}\n\t// @include media($tab-min-width){ min-height: rem(170);}\n\t// @include media($lap-min-width){ min-height: rem(166);}\n\t// @include media($desk-min-width){ min-height: rem(170);}\n\t// @include media($hires-min-width){ min-height: rem(160);}\n}\n}\n\n.post-gutter-desandro {\n\twidth: percentage(0);\n\n\t@include media($mob-min-width){ width: percentage(0.029);}\n\t@include media($tab-min-width){ width: percentage(0.024);}\n\t// @include media($hires-min-width){ width: percentage(0.019);}\n\t// @include media($desk-min-width){ width: percentage(0.014);}\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n",".resume {\n\tbackground-color: $white100;\n\n\t.work-experience,\n\t.education,\n\t.skills-competency {\n\t\tmargin: rem(30) 0;\n\t}\n\n\t.work-experience,\n\t.education,\n\t.pretty-good,\n\t.kinda-okay {\n\t\t@include span-columns(12);\n\n\t\t@include media($tab-min-width){\n\t\t\t@include span-columns(6);\n\t\t}\n\t}\n\n\t.education,\n\t.kinda-okay {\n\t\t@include media($tab-min-width){\n\t\t\t@include omega();\n\t\t}\n\t}\n\n\t.content {\n\t\tmax-width: rem(400);\n\t}\n\n\t.item {\n\t\t@include inline-block-container;\n\t\tmargin-bottom: rem(50);\n\n\t\t> * {\n\t\t\tdisplay: block;\n\t\t\tposition: relative;\n\t\t}\n\n\t\t.title {\n\t\t\tfont-family: $header-family;\n\t\t\tfont-size: rem(18);\n\t\t\tfont-style: italic;\n\t\t\tfont-weight: 400;\n\t\t\t// font-weight: 500;\n\t\t\tline-height: 1.15;\n\t\t\tmargin-bottom: rem(10);\n\t\t\tfont-size: rem(20);\n\t\t\t@include media($mob-min-width){\n\t\t\t\tfont-size: rem(21);\n\t\t\t}\n\t\t\t@include media($tab-min-width){\n\t\t\t\tfont-size: rem(22);\n\t\t\t}\n\t\t}\n\n\t\t.role,\n\t\t.period {\n\t\t\tfont-family: $suppl-family;\n\t\t\tmargin: 0;\n\t\t\tmargin-bottom: rem(5);\n\t\t}\n\n\t\t.role {\n\t\t\t// color: tint($black400, 10%);\n\t\t\tcolor: saturate($accent-color, 1.1);\n\t\t\ttext-transform: uppercase;\n\t\t\tfont-size: rem(15);\n\t\t\tletter-spacing: 0.5px;\n\t\t\tline-height: 1.35;\n\t\t}\n\n\t\t.period {\n\t\t\tcolor: $base-color;\n\t\t\tfont-size: rem(14);\n\t\t\tmargin-bottom: rem(10);\n\t\t\tfont-style: italic;\n\t\t}\n\n\t\t.desc {\n\t\t\tpadding-left: rem(20);\n\n\t\t\t* {\n\t\t\t\tline-height: 1.7;\n\t\t\t}\n\n\t\t\tli,\n\t\t\tspan {\n\t\t\t\tmargin-bottom: rem(5);\n\t\t\t}\n\t\t}\n\t}\n}\n\n.pdf {\n\tbackground: $background-color200;\n}\n",".contact-me {\n\t$contact-background: $white150;\n\t$contact-background: $background-color100;\n\t$contact-font-family: $suppl-family;\n\t$contact-font-color: $black300;\n\n\tbackground-color: $contact-background;\n\t.links-out {\n\t\t@include inline-lists;\n\n\t\tli a {\n\t\t\tmargin: rem(5);\n\t\t\tpadding: 0 rem(10);\n\t\t\tdisplay: block;\n\t\t\tline-height: 1;\n\n\t\t\t&:first-child {\n\t\t\t\tmargin-left: 0;\n\t\t\t\tpadding-left: 0;\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\tfont-family: $contact-font-family;\n\t\t\t\tfont-size: rem(24);\n\t\t\t\tfont-style: italic;\n\t\t\t\tcolor: $contact-font-color;\n\t\t\t\tfont-weight: 300;\n\t\t\t}\n\t\t}\n\n\t}\n}\n",".post {\n\t// @include outer-container();\n\n\t.post-content-wrapper {\n\t\t@include row();\n\t}\n\n\t.post-cover-image,\n\t.post-content {\n\t\t@include row();\n\t\tmargin-bottom: rem(15);\n\t\t// @include span-columns(12);\n\t\t// @include media($tab-min-width){\n\t\t\t// @include span-columns(8);\n\t\t// }\n\t\t// @include media($lap-min-width){\n\t\t\t// @include span-columns(9);\n\t\t// }\n\t\t// @include media($desk-min-width){\n\t\t// \t@include span-columns(10);\n\t\t// }\n\t}\n\n\t.post-meta {\n\t\t// @include span-columns(12);\n\t\t@include row();\n\t\tmargin-bottom: rem(30);\n\t\t// @include omega();\n\n\t\t.post-meta__date-author {\n\t\t\t@include span-columns(4);\n\t\t}\n\n\t\t.post-meta__attrib {\n\t\t\t@include span-columns(8);\n\t\t\t@include omega();\n\t\t\ttext-align: right;\n\t\t}\n\n\t\t.post-meta__site-link {\n\t\t\tdisplay: block;\n\t\t\tfont-size: rem(14);\n\t\t\tfont-weight: 600;\n\t\t\tcolor: $black100;\n\t\t}\n\n\t\t// @include media($tab-min-width){\n\t\t// \t@include span-columns(4);\n\t\t// }\n\t\t// @include media($lap-min-width){\n\t\t// \t@include span-columns(3);\n\t\t// }\n\t\t// @include media($desk-min-width){\n\t\t// \t@include span-columns(2);\n\t\t// }\n\t}\n\n\t.post-inner-images {\n\t\timg {\n\t\t\tdisplay: block;\n\t\t\twidth: 100%;\n\t\t\tposition: relative;\n\t\t\tmargin-bottom: rem(15);\n\t\t}\n\t}\n\n\t.post-skills {\n\t\t.skill-list {\n\t\t\t@extend .inline-lists;\n\n\t\t\t.item {\n\t\t\t\t@include block-tags;\n\t\t\t\t@include transition(all 0.25s ease-in-out);\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tfont-family: $suppl-family;\n\t\t\t\tfont-size: rem(14);\n\t\t\t\tline-height: normal;\n\t\t\t\tcolor: $black100;\n\n\t\t\t\t&.checked,\n\t\t\t\t&:hover,\n\t\t\t\t&:active {\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tborder-color: shade($accent-color, 10%);\n\t\t\t\t\tcolor: shade($accent-color, 10%);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tblockquote {\n\t\tline-height: 1.2;\n\t\tborder-left-color: $accent-color;\n\t\tmargin-left: 0;\n\t\tfont-family: $body-family;\n\t\tfont-weight: 400;\n\t\tfont-style: normal;\n\n\t\tfont-size: rem(24);\n\t\tborder-left-width: rem(5);\n\t\t@include media($lap-min-width){\n\t\t\tfont-size: rem(36);\n\t\t\tborder-left-width: rem(10);\n\t\t\tline-height: 1.15;\n\t\t}\n\t}\n\n}\n"]}