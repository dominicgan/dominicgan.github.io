{"version":3,"sources":["modules/featherlight-images.js","modules/article.js","modules/grid-isotope.js","modules/site.js"],"names":["init","elem","FeatherlightImages","module","_jquery","$__require","_classCallCheck","this","scope","_jquery2","default","selector","length","initFeatherlightImages","_self","Article","_featherlightImages","featherlightImages","i","el","GridIsotope","options","itemSelector","sortAscending","name","date","masonry","percentPosition","columnWidth","gutter","transitionDuration","removeClass","addClass","_options","itemElem","find","attr","$grid","Modernizr","touch","each","_filterElem","filterValue","filter","$el","_sortElem","sortValue","sortBy","Site","WOW","offset","mobile","live","wow"],"mappings":"2aA2CO,QAAAA,MAAAC,MACO,GAAAC,oBAAbD,MACAE,mmBAFeH,KAAAA,IA3ChB,IAAAI,SAAAC,WAAA,kDACAA,YAAA,gBACAA,WAAA,wBACAA,WAAA,oBACAA,WAAA,+BASaH,oBAAAA,QAAAA,mBAAAA,WACZ,QAAAA,oBAAAD,MAAmBK,gBAAAC,KAAAL,oBAClBK,KAAAC,OAAa,EAAAC,SAAAC,SAAbT,MACAM,KAAAI,SAAAV,uEAGGA,MACHM,KAAAC,OAAa,EAAAC,SAAAC,SAAbT,MACAM,KAAAI,SAAAV,oCAIIM,KAAAC,MAAJI,QACCL,KAAAM,0EAKDN,KAOAO,MAAAA,wZCJK,QAAAd,MAAAC,MACO,GAAAc,SAAbd,MACAE,wlBAFeH,KAAAA,IAlChB,IAAAI,SAAAC,WAAA,mDACAW,oBAAAX,WAAA,4BAQaU,QAAAA,QAAAA,QAAAA,WACZ,QAAAA,WAAcT,gBAAAC,KAAAQ,SACbR,KAAAC,OAAa,EAAAC,SAAAC,SAAb,WACAH,KAAAU,mBAA0B,GAAIf,qBAA9BA,6EAIA,GAAIY,OAAJP,IAEIO,OAAAA,MAAJF,QACCE,MAAAA,wDAKD,GAAIA,OAAJP,IAEAO,OAAAA,MAAAA,KAAiB,SAAAI,EAAAC,IAChBL,MAAAA,mBAAAA,IAAAA,MACAA,MAAAA,mBAAAA,+YC8FI,QAAAd,SACO,GAAboB,cACAjB,4lBAFeH,KAAAA,IA1HhB,IAAAI,SAAAC,WAAA,kDACAA,YAAA,gBACAA,WAAA,WACAA,WAAA,gBAQae,aAAAA,QAAAA,YAAAA,WACZ,QAAAA,eAAed,gBAAAC,KAAAa,aACdb,KAAAC,OAAa,EAAAC,SAAAC,SAAb,cACAH,KAAAc,SACCC,aADc,sBAEdC,eACCC,MADc,EAEdC,MAAM,GAEPC,SACCC,iBADQ,EAERC,YAFQ,uBAGRC,OAAQ,yBAETC,mBAAoB,sEAKrB,GAAIhB,OAAJP,IAEIO,OAAAA,MAAJF,SACCE,MAAAA,aACAA,MAAAA,oDAKD,GAAIA,OAAJP,IAGAO,OAAAA,MAAAA,KAAAA,eAAAA,YAAAA,UACAA,MAAAA,MAAAA,KAAAA,cAAAA,SAAAA,cAAAA,QAFA,+EAIAA,MAAAA,MAAAA,KAAAA,cAAAA,KAAoC,YACnC,EAAAL,SAAAC,SAAAH,MAAAwB,YAAA,aAAAC,SAAA,8DAKD,GAAIlB,OAAJP,KACI0B,SAAWnB,MAAfO,OAEAY,UAAAA,OAAAA,4DACAA,SAAAA,aACCT,KADyB,QAEzBC,KAAM,SAAAS,UAEL,OADW,EAAAzB,SAAAC,SAAAwB,UAAAC,KAAA,QAAAC,KAAX,aAKF,IAAIC,OAAQvB,MAAAA,MAAAA,KAAAA,yBAAAA,QAAZmB,SAEAI,OAAAA,eAAAA,SAA+B,WAC9BA,MAAAA,QAAAA,YAIGC,UAAJC,QACC,EAAA9B,SAAAC,SAAA,uBAAA8B,KAA8B,YAC7B,EAAA/B,SAAAC,SAAAH,MAAAyB,SAAA,cAIFlB,MAAAA,eAAAA,OACAA,MAAAA,aAAAA,8CAGcuB,OACd,GAAIvB,OAAJP,KACIkC,YAAc3B,MAAAA,MAAAA,KAAlB,oBAGA2B,aAAAA,GAAAA,QAAAA,YAAqC,WACpC,GAAIC,cAAc,EAAAjC,SAAAC,SAAAH,MAAA6B,KAAlB,cAEAC,OAAAA,SAAgBM,OAAhBN,gBAIDI,YAAAA,KAAiB,SAAAvB,EAAAC,IAChB,GAAIyB,MAAM,EAAAnC,SAAAC,SAAVS,GACAyB,KAAAA,GAAAA,QAAAA,SAA0B,WACzBA,IAAAA,KAAAA,YAAAA,YAAAA,YACA,EAAAnC,SAAAC,SAAAH,MAAAyB,SAAA,oDAKUK,OACZ,GAAIvB,OAAJP,KACIsC,UAAY/B,MAAAA,MAAAA,KAAhB,kBAGA+B,WAAAA,GAAAA,QAAAA,YAAoC,WACnC,GAAIC,YAAY,EAAArC,SAAAC,SAAAH,MAAA6B,KAAhB,YAEAC,OAAAA,SAAgBU,OAAhBV,cAGDQ,UAAAA,KAAe,SAAA3B,EAAAC,IACd,GAAIyB,MAAM,EAAAnC,SAAAC,SAAVS,GACAyB,KAAAA,GAAAA,QAAAA,SAA0B,WACzBA,IAAAA,KAAAA,YAAAA,YAAAA,YACA,EAAAnC,SAAAC,SAAAH,MAAAyB,SAAA,4WClFG,QAAAhC,SACO,GAAbgD,OACA7C,qlBAFeH,KAAAA,IAlChB,IAAAI,SAAAC,WAAA,mDASa2C,KAAAA,QAAAA,KAAAA,WACZ,QAAAA,QAAe1C,gBAAAC,KAAAyC,MACdzC,KAAAC,OAAa,EAAAC,SAAAC,SAAb,+DAKIH,KAAAC,MAAJI,yCASU,GAAAqC,MACTC,OADiB,EAEjBC,QAFiB,EAGjBC,MAAM,IAEPC","file":"bundle.min.js","sourcesContent":["import $ from 'jquery';\nimport 'featherlight';\nimport 'featherlight-gallery';\nimport 'featherlight.css';\nimport 'featherlight-gallery.css';\n\n/**\n * @class FeatherlightImages\n * @author Dominic <dominicgangx@gmail.com>\n * Image modal viewer for articles\n * loaded by single image via lazyload\n * data-component = 'featherlight-images'\n */\nexport class FeatherlightImages {\n\tconstructor (elem) {\n\t\tthis.scope = $(elem);\n\t\tthis.selector = elem;\n\t}\n\n\tset(elem) {\n\t\tthis.scope = $(elem);\n\t\tthis.selector = elem;\n\t}\n\n\tinit() {\n\t\tif (this.scope.length) {\n\t\t\tthis.initFeatherlightImages();\n\t\t}\n\t}\n\n\tinitFeatherlightImages() {\n\t\tlet _self = this;\n\t\t// let href;\n\n\t\t// href = _self.scope.attr('data-original');\n\t\t// _self.scope.attr('data-featherlight',href);\n\n\t\t// articleImg.featherlight();\n\t\t_self.scope.featherlightGallery();\n\n\t}\n}\n\nexport function init(elem) {\n\tlet module = new FeatherlightImages(elem);\n\tmodule.init();\n}\n","import $ from 'jquery';\nimport { FeatherlightImages } from './featherlight-images.js';\n\n/**\n * @class Article\n * @author Dominic <dominicgangx@gmail.com>\n * Init article images\n * data-component = 'article'\n */\nexport class Article {\n\tconstructor() {\n\t\tthis.scope = $('article');\n\t\tthis.featherlightImages = new FeatherlightImages();\n\t}\n\n\tinit() {\n\t\tlet _self = this;\n\n\t\tif (_self.scope.length) {\n\t\t\t_self.articleImages();\n\t\t}\n\t}\n\n\tarticleImages() {\n\t\tlet _self = this;\n\n\t\t_self.scope.each(function(i, el){\n\t\t\t_self.featherlightImages.set(elem);\n\t\t\t_self.featherlightImages.init();\n\t\t});\n\t}\n\n}\n\nexport function init(elem) {\n\tlet module = new Article(elem);\n\tmodule.init();\n}","import $ from 'jquery';\nimport 'imagesloaded';\nimport 'isotope';\nimport 'modernizr';\n\n/**\n * @class GridIsotope\n * @author Dominic <dominicgangx@gmail.com>\n * [Description here]\n * data-component = 'grid-isotope'\n */\nexport class GridIsotope {\n\tconstructor () {\n\t\tthis.scope = $('.portfolio');\n\t\tthis.options = {\n\t\t\titemSelector: '.post-item-desandro',\n\t\t\tsortAscending: {\n\t\t\t\tname: true,\n\t\t\t\tdate: false\n\t\t\t},\n\t\t\tmasonry: {\n\t\t\t\tpercentPosition: true,\n\t\t\t\tcolumnWidth: '.post-sizer-desandro',\n\t\t\t\tgutter: '.post-gutter-desandro'\n\t\t\t},\n\t\t\ttransitionDuration: '0.6s'\n\t\t};\n\t}\n\n\tinit() {\n\t\tlet _self = this;\n\n\t\tif (_self.scope.length) {\n\t\t\t_self.isotopSeed();\n\t\t\t_self.initIsotope();\n\t\t}\n\t}\n\n\tisotopSeed() {\n\t\tlet _self = this;\n\n\t\tvar helpers = '<li class=\"post-sizer-desandro\"></li><li class=\"post-gutter-desandro\"></li>';\n\t\t_self.scope.find('.navigation').removeClass('hidden');\n\t\t_self.scope.find('.post-list').addClass('desandroed').prepend(helpers);\n\n\t\t_self.scope.find('.post-item').each(function(){\n\t\t\t$(this).removeClass('post-item').addClass('post-item-desandro');\n\t\t});\n\t}\n\n\tinitIsotope() {\n\t\tlet _self = this;\n\t\tlet _options = _self.options;\n\t\t\n\t\t_options['filter'] = '.ui-design, .mobile, .case-study, .web-design, .front-end';\n\t\t_options['getSortData'] = {\n\t\t\tname: '.name',\n\t\t\tdate: function( itemElem ) {\n\t\t\t\tvar date = $( itemElem ).find('time').attr('datetime');\n\t\t\t\treturn date;\n\t\t\t}\n\t\t};\n\n\t\tlet $grid = _self.scope.find('.post-list.desandroed').isotope(_options);\n\n\t\t$grid.imagesLoaded().progress( function() {\n\t\t\t$grid.isotope('layout');\n\t\t});\n\n\t\t// handle touch devices\n\t\tif (Modernizr.touch) {\n\t\t\t$('.post-item-desandro').each(function(){\n\t\t\t\t$(this).addClass('no-mouse');\n\t\t\t})\n\t\t}\n\n\t\t_self.initFilterBtns($grid);\n\t\t_self.initSortBtns($grid);\n\t}\n\n\tinitFilterBtns($grid) {\n\t\tlet _self = this;\n\t\tlet _filterElem = _self.scope.find('.portfolio-filter');\n\n\t\t// bind filter button click\n\t\t_filterElem.on('click', 'li button', function() {\n\t\t\tvar filterValue = $( this ).attr('data-filter');\n\t\t\t// use filterFn if matches value\n\t\t\t$grid.isotope({ filter: filterValue });\n\t\t});\n\n\t\t// change checked class on buttons\n\t\t_filterElem.each(function(i, el) {\n\t\t\tvar $el = $(el);\n\t\t\t$el.on('click', 'button', function() {\n\t\t\t\t$el.find('.checked').removeClass('checked');\n\t\t\t\t$(this).addClass('checked');\n\t\t\t});\n\t\t});\n\t}\n\n\tinitSortBtns($grid) {\n\t\tlet _self = this;\n\t\tlet _sortElem = _self.scope.find('.portfolio-sort');\n\n\t\t// bind sort button click\n\t\t_sortElem.on( 'click', 'li button', function() {\n\t\t\tvar sortValue = $( this ).attr('data-sort');\n\t\t\t// use sortFn if matches value\n\t\t\t$grid.isotope({ sortBy: sortValue });\n\t\t});\n\n\t\t_sortElem.each(function(i, el) {\n\t\t\tvar $el = $(el);\n\t\t\t$el.on('click', 'button', function() {\n\t\t\t\t$el.find('.checked').removeClass('checked');\n\t\t\t\t$(this).addClass('checked');\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport function init() {\n\tlet module = new GridIsotope();\n\tmodule.init();\n}","import $ from 'jquery';\n// import 'animate.css';\n// import 'wow';\n\n/**\n * @class Site\n * @author Dominic <dominicgangx@gmail.com>\n * data-component = 'site'\n */\nexport class Site {\n\tconstructor () {\n\t\tthis.scope = $('body');\n\t}\n\n\tinit() {\n\t\t// console.log('init');\n\t\tif (this.scope.length) {\n\t\t\t// this.initWow();\n\t\t\t// console.log('scope exists');\n\t\t}\n\t}\n\n\tinitWow() {\n\t\tlet _self = this;\n\t\t// init wowjs\n\t\tvar wow = new WOW({\n\t\t\toffset: 0,          \n\t\t\tmobile: false,       \n\t\t\tlive: true        \n\t\t})\n\t\twow.init();\n\t}\n}\n\nexport function init() {\n\tlet module = new Site();\n\tmodule.init();\n}"]}